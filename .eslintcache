[{"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"3","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"4","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"5","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"9","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"10","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"11","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"12","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"13","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"14","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"15","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js":"16","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js":"17","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"18","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"19","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"20","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js":"21","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js":"22","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js":"23"},{"size":913,"mtime":1610097440760,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1609945864379,"results":"26","hashOfConfig":"25"},{"size":1757,"mtime":1610121703543,"results":"27","hashOfConfig":"25"},{"size":668,"mtime":1610040754738,"results":"28","hashOfConfig":"25"},{"size":492,"mtime":1609945864375,"results":"29","hashOfConfig":"25"},{"size":1819,"mtime":1610042401532,"results":"30","hashOfConfig":"25"},{"size":475,"mtime":1609945864377,"results":"31","hashOfConfig":"25"},{"size":159,"mtime":1609945864376,"results":"32","hashOfConfig":"25"},{"size":512,"mtime":1609945864374,"results":"33","hashOfConfig":"25"},{"size":174,"mtime":1609945864374,"results":"34","hashOfConfig":"25"},{"size":1942,"mtime":1610107771842,"results":"35","hashOfConfig":"25"},{"size":15392,"mtime":1610113481571,"results":"36","hashOfConfig":"25"},{"size":3138,"mtime":1610042401535,"results":"37","hashOfConfig":"25"},{"size":2003,"mtime":1610112329506,"results":"38","hashOfConfig":"25"},{"size":2466,"mtime":1610040743899,"results":"39","hashOfConfig":"25"},{"size":373,"mtime":1610102849569,"results":"40","hashOfConfig":"25"},{"size":969,"mtime":1610113138808,"results":"41","hashOfConfig":"25"},{"size":166,"mtime":1609945864370,"results":"42","hashOfConfig":"25"},{"size":3700,"mtime":1609945864371,"results":"43","hashOfConfig":"25"},{"size":1048,"mtime":1610121272695,"results":"44","hashOfConfig":"25"},{"size":1174,"mtime":1610114673145,"results":"45","hashOfConfig":"25"},{"size":532,"mtime":1610117615364,"results":"46","hashOfConfig":"25"},{"size":517,"mtime":1610119259024,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"tl36v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js",[],["99","100"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",["101"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",["102","103","104","105","106"],"import React, { useContext, useEffect, useState, Memo } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { AuthContext } from \"../../firebase/Auth\";\r\nimport { AdminUsersContext } from \"../../contexts/adminUsersContext\";\r\n\r\nimport VideoSelectionPage from \"../VideoSelectionPage\";\r\nimport LectureViewer from \"../LectureViewer\";\r\nimport CoachCMS from \"../CoachCMS\";\r\nimport HeaderBar from \"../HeaderBar\";\r\nimport Login from \"../Login\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport Restricted from \"../Restricted\";\r\n\r\nconst gridStyle = {\r\n  width: \"25%\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst api = `/`;\r\n\r\nfunction App() {\r\n  console.log(\"app firing\");\r\n  const { currentUser } = useContext(AuthContext);\r\n  const adminUsers = useContext(AdminUsersContext);\r\n\r\n  return (\r\n    <>\r\n      <PrivateRoute\r\n        path=\"/\"\r\n        render={() => (\r\n          <>\r\n            <HeaderBar />\r\n          </>\r\n        )}\r\n      />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <>\r\n              <VideoSelectionPage />\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path={\"/videoviewer/:id\"}\r\n          render={() => (\r\n            <>\r\n              <LectureViewer />\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path={\"/cms\"}\r\n          render={() =>\r\n            adminUsers[0].find((user) => user.email === currentUser.email) ? (\r\n              <>\r\n                <CoachCMS />\r\n              </>\r\n            ) : (\r\n              <Restricted />\r\n            )\r\n          }\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["107","108"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Space,\r\n  Select,\r\n  TimePicker,\r\n  Spin,\r\n  Switch,\r\n  message,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { selectTags } from \"../../data/tags\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport tutors from \"../../data/tutors\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\n//global required field rules object, default false\r\nconst ruleSetRequired = [\r\n  {\r\n    required: true,\r\n    message: \"Input required\",\r\n  },\r\n];\r\n\r\n//simple layout configuation objects\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\n//start of component function\r\nfunction CoachCMS() {\r\n  const [tags, setTags] = useState([]); //used for tags field\r\n  const [vimeoVideoSelect, setVimeoVideoSelect] = useState([]); //used for API call to vimeo for video selector\r\n\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n\r\n  const [guestLecturer, setGuestLecturer] = useState(false);\r\n  const [tutorialVideo, setTutorialVideo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter(\r\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\r\n    );\r\n\r\n    if (additionalTags.length > 0 && !guestLecturer) {\r\n      setTags([...additionalTags, \"lecture\"]);\r\n    } else if (additionalTags.length > 0 && guestLecturer) {\r\n      setTags([...additionalTags, \"guest lecture\"]);\r\n    } else if (additionalTags.length === 0 && !guestLecturer) {\r\n      setTags([\"lecture\"]);\r\n    } else if (additionalTags.length === 0 && guestLecturer) {\r\n      setTags([\"guest lecture\"]);\r\n    }\r\n  }, [guestLecturer]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\r\n\r\n    if (additionalTags.length > 0 && !tutorialVideo) {\r\n      setTags([...additionalTags]);\r\n    } else if (additionalTags.length > 0 && tutorialVideo) {\r\n      setTags([...additionalTags, \"tutorial\"]);\r\n    }\r\n  }, [tutorialVideo]);\r\n\r\n  //direct form control via useform - do not use setState\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    async function getVimeoVideoList() {\r\n      const response = await fetch(`https://api.vimeo.com/me/videos`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"bearer \" + process.env.REACT_APP_VIMEO_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/vnd.vimeo.*+json;version=3.4\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n\r\n      setVimeoVideoSelect(\r\n        <Select\r\n          style={{ width: 250 }}\r\n          onChange={(value) => {\r\n            form.setFieldsValue({\r\n              title: value[0],\r\n              video_url: value[1],\r\n              thumbnail_url: value[2],\r\n            });\r\n          }}\r\n        >\r\n          {data.data.map((video) => (\r\n            <Option\r\n              key={video.link}\r\n              value={[\r\n                video.name,\r\n                video.link,\r\n                video.pictures.sizes[5].link,\r\n                video.created_time,\r\n              ]}\r\n            >\r\n              {`${video.name} - ${video.created_time\r\n                .split(\"T\")[0]\r\n                .split(\"-\")\r\n                .reverse()\r\n                .join(\"-\")}`}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n    getVimeoVideoList();\r\n  }, [form]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  //time converstion function for form submit object, returns total seconds for each instance\r\n  function timeCovertToSeconds(timeString) {\r\n    const timeSplit = String(timeString).split(\" \")[4].split(\":\");\r\n    const hoursToSeconds = Number(timeSplit[0]) * 60 * 60;\r\n    const minutesToSeconds = Number(timeSplit[1]) * 60;\r\n    const timeInSeconds =\r\n      hoursToSeconds + minutesToSeconds + Number(timeSplit[2]);\r\n    return timeInSeconds;\r\n  }\r\n\r\n  const setLinkType = (object, resource) =>\r\n    object\r\n      ? object.map((obj) => Object.assign(obj, { type: resource }))\r\n      : [{ type: resource }];\r\n\r\n  //submit form function\r\n  const submitForm = (values) => {\r\n    const timestamps = values.timestamps.map((timeObj) => {\r\n      return {\r\n        timeString: String(timeObj.timestampSelect._d).split(\" \")[4],\r\n        timeSecondsValue: timeCovertToSeconds(timeObj.timestampSelect._d),\r\n        timeDesc: timeObj.timestampDesc,\r\n      };\r\n    });\r\n    postResource({\r\n      ...values,\r\n      tags: tags,\r\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\r\n      timestamps: timestamps,\r\n      github_links: setLinkType(values.github_links, \"github\"),\r\n      slides: setLinkType(values.slides, \"presentation slide\"),\r\n      other_links: setLinkType(values.other_links, \"additional reading\"),\r\n    });\r\n\r\n    // onReset();\r\n  };\r\n\r\n  const submitFailed = (value) => {\r\n    value.errorFields.map((value) =>\r\n      message.error(\r\n        `${\r\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\r\n        } field ${value.errors[0].toLowerCase()} `,\r\n        2.5\r\n      )\r\n    );\r\n  };\r\n\r\n  //form reset button function\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    form.setFieldsValue({\r\n      vimeoAPI: \"\",\r\n    });\r\n    setTags([]);\r\n  };\r\n\r\n  //Post request async function\r\n  async function postResource(resource) {\r\n    const api = \"/\";\r\n    await fetch(process.env.REACT_APP_BACKEND_URL + api, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(resource),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\r\n  }\r\n\r\n  //api call to vimeo for video selection, also creates and populates select component input\r\n\r\n  //start of rendering\r\n  return (\r\n    <>\r\n      <h1>Coach CMS Form</h1>\r\n\r\n      <Form\r\n        {...layout}\r\n        name=\"cms\"\r\n        form={form}\r\n        initialValues={{\r\n          remember: false,\r\n        }}\r\n        onFinish={submitForm}\r\n        onFinishFailed={(value) => submitFailed(value)}\r\n      >\r\n        <Form.Item label=\"Vimeo API Video Select\">\r\n          {!!vimeoVideoSelect ? vimeoVideoSelect : <Spin />}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Video Title\" name=\"title\" rules={ruleSetRequired}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Guest Lecturer\" name=\"guest_lecture_switch\">\r\n          <Switch\r\n            onChange={() => {\r\n              setGuestLecturer(!guestLecturer);\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\r\n          name=\"lecturer\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          {!guestLecturer ? (\r\n            <Select allowClear>{tutors.map((tutor) => tutor)}</Select>\r\n          ) : (\r\n            <Input />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Video URL\" name=\"video_url\" rules={ruleSetRequired}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Thumbnail URL\"\r\n          name=\"thumbnail_url\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"tutorial\" name=\"tutorial_switch\">\r\n          <Switch\r\n            onChange={() => {\r\n              setTutorialVideo(!tutorialVideo);\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tags\" rules={ruleSetRequired}>\r\n          <Select\r\n            mode=\"multiple\"\r\n            name=\"tags\"\r\n            value={tags}\r\n            placeholder=\"Select tags\"\r\n            onChange={(value) => {\r\n              setTags(value);\r\n            }}\r\n          >\r\n            {selectTags}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\r\n          name=\"lecture_date\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Bootcamp Week\"\r\n          name=\"bootcamp_week\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <InputNumber min={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Video Description\"\r\n          name=\"description\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <Input.TextArea autoSize={{ minRows: 8 }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Timestamps\" required>\r\n          <Form.List name=\"timestamps\" rules={ruleSetRequired}>\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timestampSelect\"]}\r\n                      fieldKey={[field.fieldKey, \"timestampSelect\"]}\r\n                      style={{ width: \"140px\" }}\r\n                      rules={ruleSetRequired}\r\n                    >\r\n                      <TimePicker />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timestampDesc\"]}\r\n                      label=\"Description\"\r\n                      style={{ width: \"350px\" }}\r\n                      fieldKey={[field.fieldKey, \"timestampDesc\"]}\r\n                      rules={ruleSetRequired}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Timestamp\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Github Links\">\r\n          <Form.List name=\"github_links\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Github Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Slide Links\">\r\n          <Form.List name=\"slides\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Slide Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Other Links\">\r\n          <Form.List name=\"other_links\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Other Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button htmlType=\"button\" onClick={onReset}>\r\n            Reset\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoachCMS;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",["109"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { useLocation, Redirect } from \"react-router-dom\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./style.css\";\r\nimport FeedbackForm from \"../FeedbackForm\";\r\nimport { Tabs, Spin } from \"antd\";\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function LectureViewer() {\r\n  const id = useLocation().pathname.split(\"/\").pop();\r\n  const player = useRef(null);\r\n  const [videoData, setVideoData] = useState();\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n\r\n  useEffect(() => {\r\n    async function getVideoData() {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_BACKEND_URL + `/${id}`\r\n      );\r\n      const data = await response.json();\r\n      setVideoData(data[0]);\r\n    }\r\n    getVideoData();\r\n  }, []);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  function seekToTimestamp(seconds) {\r\n    return player.current.seekTo(seconds);\r\n  }\r\n\r\n  if (videoData === null || videoData === undefined) {\r\n    return (\r\n      <>\r\n        <Spin />\r\n      </>\r\n    );\r\n  } else\r\n    return (\r\n      <>\r\n        <h1>\r\n          {videoData.title} - {videoData.lecturer}\r\n        </h1>\r\n        <p>\r\n          <strong>video id:</strong> {videoData.id}\r\n        </p>\r\n        <div id=\"display\">\r\n          <ReactPlayer ref={player} url={videoData.video_url} controls={true} />\r\n          <div id=\"video-sidebar\">\r\n            <div id=\"video-timestamps\">\r\n              <h3>Timestamps</h3>\r\n              {videoData.timestamps.map((value) => {\r\n                return (\r\n                  <div>\r\n                    <button\r\n                      onClick={() => seekToTimestamp(value.timeSecondsValue)}\r\n                    >\r\n                      {`${value.timeString} - ${value.timeDesc}`}\r\n                    </button>\r\n                    <br />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          <Tabs size=\"small\" style={{ width: \"500px\" }} defaultActiveKey=\"1\">\r\n            <TabPane tab=\"Video Description\" key=\"1\">\r\n              <p>{videoData.description}</p>\r\n            </TabPane>\r\n            <TabPane tab=\"Resources\" key=\"2\">\r\n              {[\r\n                ...videoData.github_links,\r\n                ...videoData.slides,\r\n                ...videoData.other_links,\r\n              ].map((value) =>\r\n                value.link ? (\r\n                  <>\r\n                    <a\r\n                      href={value.link}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {value.type} - {value.desc}\r\n                    </a>\r\n                    <br />\r\n                  </>\r\n                ) : (\r\n                  <li>{value.type} resources not available for this content</li>\r\n                )\r\n              )}\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n        </div>\r\n        <FeedbackForm />\r\n      </>\r\n    );\r\n}\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",["110"],"import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./style.css\";\r\nimport { Modal, Button, Input } from \"antd\";\r\nimport { message, Space } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\n//Feedback success messages. Edit these to display different messages depending the success of the feedback form submit.\r\n\r\nfunction successMsg() { //Displays on feedback success\r\n  message.success(\"Thanks for your feedback!\");\r\n}\r\n\r\nfunction errorMsg() {//Displays on feedback error\r\n  message.error(\"An error occured. Please try again.\");\r\n}\r\n\r\n//Gets the video id from the url\r\nlet url = window.location.href; //gets the whole url\r\nlet split = url.split(\"/\"); //splits the url into an array by /\r\nlet ref = split[split.length - 1]; //Collects the last part of the array, which in this case will be the video id that is displaying on this page\r\n\r\n//Sets whether or not the modal is visable\r\nexport default function FeedbackModal() {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n\r\n  //Posts the feedback to the database\r\n  function postFeedback(value) {//Value is the feedback to be submitted\r\n    fetch(`http://localhost:5000/feedback`, { //Change this url on deployment\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        videoId: value.videoId, //Taken from ref - see feedbackToSubmit below\r\n        feedback: value.feedback,\r\n      }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      //Validation: ContentType\r\n    })\r\n      .then((res) => res.json()) //res.json() is an async function\r\n      .then((data) => {\r\n        console.log(data, \"Thanks for the feedback: \" + feedback);\r\n        setFeedback(\"\");//Resets the form\r\n\r\n        setIsModalVisible(false); //closes the modal\r\n        successMsg(); //message confirming to the user that the feedback has gone through\r\n      }) \r\n      .catch((error) => {\r\n        errorMsg(); //message alerting user that there has been an error and they may need to try again\r\n        console.log(error, \"my error\");\r\n      }); //uncaught promise rejection. The promise throws and error and I need to catch otherwise it will be thrown into the ether\r\n  }\r\n\r\n  //This function changes the feedback state to whatever is inserted into the feedback textbox onChange\r\n  function handleChange(e) {\r\n    // e.preventDefault();\r\n    if (e.target.id === \"feedback\") {\r\n      setFeedback(e.target.value);\r\n    }\r\n  }\r\n\r\n  //handleSubmit takes the feedback state, and the video id (from params; see \"ref\" above) and posts it to postFeedback as an object\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const feedbackToSubmit = {\r\n      videoId: ref,\r\n      feedback: feedback,\r\n    };\r\n    postFeedback(feedbackToSubmit);\r\n    // console.log({feedbackToSubmit});\r\n  }\r\n  const showModal = () => {//Sets modal visibility to true\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {//Sets modal visibility to false, used if the user has pressed cancel\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Give Feedback\r\n      </Button>\r\n      <Modal\r\n        title=\"Give Feedback on this lecture\"\r\n        visible={isModalVisible}\r\n        onOk={handleSubmit}\r\n        onCancel={handleCancel}\r\n      >\r\n        <div>\r\n          <div id=\"feedback-form-container\">\r\n            <form>\r\n              <TextArea\r\n                id=\"feedback\"\r\n                placeholder=\"Insert Feedback\"\r\n                value={feedback}\r\n                onChange={handleChange}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",["111","112","113"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js",["114"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":1,"column":29,"nodeType":"121","messageId":"122","endLine":1,"endColumn":38},{"ruleId":"119","severity":1,"message":"124","line":1,"column":40,"nodeType":"121","messageId":"122","endLine":1,"endColumn":48},{"ruleId":"119","severity":1,"message":"125","line":1,"column":50,"nodeType":"121","messageId":"122","endLine":1,"endColumn":54},{"ruleId":"119","severity":1,"message":"126","line":16,"column":7,"nodeType":"121","messageId":"122","endLine":16,"endColumn":16},{"ruleId":"119","severity":1,"message":"127","line":21,"column":7,"nodeType":"121","messageId":"122","endLine":21,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":73,"column":6,"nodeType":"130","endLine":73,"endColumn":21,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"129","line":83,"column":6,"nodeType":"130","endLine":83,"endColumn":21,"suggestions":"132"},{"ruleId":"128","severity":1,"message":"133","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":8,"suggestions":"134"},{"ruleId":"119","severity":1,"message":"135","line":5,"column":19,"nodeType":"121","messageId":"122","endLine":5,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":8,"column":10,"nodeType":"121","messageId":"122","endLine":8,"endColumn":15},{"ruleId":"119","severity":1,"message":"136","line":12,"column":10,"nodeType":"121","messageId":"122","endLine":12,"endColumn":19},{"ruleId":"119","severity":1,"message":"137","line":12,"column":21,"nodeType":"121","messageId":"122","endLine":12,"endColumn":33},{"ruleId":"119","severity":1,"message":"138","line":6,"column":23,"nodeType":"121","messageId":"122","endLine":6,"endColumn":37},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'weeks' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Memo' is defined but never used.","'gridStyle' is assigned a value but never used.","'api' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["143"],"'Space' is defined but never used.","'searchObj' is assigned a value but never used.","'setSearchObj' is assigned a value but never used.","'setDataOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"150","text":"151"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"152","text":"153"},"Update the dependencies array to be: [id]",{"range":"154","text":"155"},[2091,2106],"[guestLecturer, tags]",[2421,2436],"[tags, tutorialVideo]",[924,926],"[id]"]