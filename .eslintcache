[{"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"3","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"4","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"5","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"9","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"10","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"11","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"12","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"13","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"14","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"15","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\config.js":"16","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\tutors.js":"17","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"18","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"19","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js":"20","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js":"21","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js":"22","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js":"23","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"24","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js":"25","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js":"26","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\tags.js":"27","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\weeks.js":"28","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js":"29","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js":"30"},{"size":913,"mtime":1610365244449,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1608569004045,"results":"33","hashOfConfig":"32"},{"size":492,"mtime":1609857333464,"results":"34","hashOfConfig":"32"},{"size":1721,"mtime":1610365244254,"results":"35","hashOfConfig":"32"},{"size":668,"mtime":1610365244264,"results":"36","hashOfConfig":"32"},{"size":2340,"mtime":1610470531775,"results":"37","hashOfConfig":"32"},{"size":475,"mtime":1609857333468,"results":"38","hashOfConfig":"32"},{"size":159,"mtime":1609857333465,"results":"39","hashOfConfig":"32"},{"size":512,"mtime":1609857333456,"results":"40","hashOfConfig":"32"},{"size":3356,"mtime":1610480903156,"results":"41","hashOfConfig":"32"},{"size":174,"mtime":1609857333458,"results":"42","hashOfConfig":"32"},{"size":3711,"mtime":1610468185077,"results":"43","hashOfConfig":"32"},{"size":2073,"mtime":1610477439566,"results":"44","hashOfConfig":"32"},{"size":17348,"mtime":1610365244191,"results":"45","hashOfConfig":"32"},{"size":2104,"mtime":1610478544911,"results":"46","hashOfConfig":"32"},{"size":491,"mtime":1610365244253,"results":"47","hashOfConfig":"32"},{"size":373,"mtime":1610365244262,"results":"48","hashOfConfig":"32"},{"size":272,"mtime":1610470630906,"results":"49","hashOfConfig":"32"},{"size":3725,"mtime":1610365244240,"results":"50","hashOfConfig":"32"},{"size":3469,"mtime":1610365244221,"results":"51","hashOfConfig":"32"},{"size":818,"mtime":1610365244213,"results":"52","hashOfConfig":"32"},{"size":5221,"mtime":1610365244232,"results":"53","hashOfConfig":"32"},{"size":4360,"mtime":1610365244233,"results":"54","hashOfConfig":"32"},{"size":808,"mtime":1610475759848,"results":"55","hashOfConfig":"32"},{"size":619,"mtime":1610365244216,"results":"56","hashOfConfig":"32"},{"size":620,"mtime":1610365244196,"results":"57","hashOfConfig":"32"},{"size":970,"mtime":1610365244259,"results":"58","hashOfConfig":"32"},{"size":517,"mtime":1610365244263,"results":"59","hashOfConfig":"32"},{"size":516,"mtime":1610365244247,"results":"60","hashOfConfig":"32"},{"size":1211,"mtime":1610477434335,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"yia76y",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\index.js",[],["129","130"],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",["131","132","133","134"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { useLocation, Redirect } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./style.css\";\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport config from \"../../config\";\r\nimport FeedbackForm from \"../FeedbackForm\";\r\nimport { Spin, Row, Col, Space, Descriptions, Typography, Divider } from \"antd\";\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nexport default function LectureViewer() {\r\n  const id = useLocation().pathname.split(\"/\").pop();\r\n  const player = useRef(null);\r\n  const [videoData, setVideoData] = useState(false);\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n\r\n  useEffect(() => {\r\n    async function getVideoData() {\r\n      const response = await fetch(config.BACKEND_URL_SEARCH_BY_ID + id);\r\n      const data = await response.json();\r\n      setVideoData(data[0]);\r\n    }\r\n    getVideoData();\r\n  }, [id]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  function seekToTimestamp(seconds) {\r\n    return player.current.seekTo(seconds);\r\n  }\r\n  console.log(videoData);\r\n  if (!videoData) {\r\n    return (\r\n      <>\r\n        <Spin />\r\n      </>\r\n    );\r\n  } else\r\n    return (\r\n      <Row justify={\"center\"}>\r\n        ​<Col span={24}></Col>\r\n        <Col span={16}>\r\n          <div className=\"player-wrapper\">\r\n            <ReactPlayer\r\n              ref={player}\r\n              url={videoData.video_url}\r\n              controls={true}\r\n              className=\"react-player\"\r\n              width=\"95%\"\r\n              height=\"95%\"\r\n            />\r\n          </div>\r\n          <Col span={21}>\r\n            <h1 style={{ padding: \"0px\" }}>{videoData.title}</h1>\r\n            <h2 style={{ padding: \"0px\" }}>{videoData.lecturer}</h2>\r\n            Video ID: {videoData.id}\r\n          </Col>\r\n          <Col span={23}>\r\n            <Descriptions\r\n              colon={false}\r\n              title=\"Description\"\r\n              style={{\r\n                marginTop: \"16px\",\r\n                border: \"1px solid #ddd\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <Descriptions.Item>{videoData.description} </Descriptions.Item>\r\n            </Descriptions>\r\n          </Col>\r\n        </Col>\r\n        <Col span={5}>\r\n          <Space direction=\"vertical\" size=\"small\">\r\n            <FeedbackForm />\r\n            <h3>Resources</h3>​\r\n            <Paragraph>\r\n              {[\r\n                ...videoData.github_links,\r\n                ...videoData.slides,\r\n                ...videoData.other_links,\r\n              ].map((value) => (\r\n                <div key={value.uuid}>\r\n                  <a\r\n                    href={value.link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {value.type} - {value.desc}\r\n                  </a>\r\n                  <br />\r\n                </div>\r\n              ))}\r\n            </Paragraph>\r\n            <Space direction=\"vertical\">\r\n              ​<h3>Timestamps</h3>\r\n              {videoData.timestamps.map((value) => {\r\n                return (\r\n                  <div>\r\n                    <button\r\n                      key={value.uuid}\r\n                      onClick={() => seekToTimestamp(value.timeSecondsValue)}\r\n                    >\r\n                      {`${value.timeString} - ${value.timeDesc}`}\r\n                    </button>\r\n                    <br />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Space>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    );\r\n}\r\n","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["135","136","137"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Space,\r\n  Select,\r\n  Switch,\r\n  message,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport tutors from \"../../data/tutors\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TimestampSelector from \"../CoachCMSTimestampSelector\";\r\nimport config from \"../../config\";\r\nimport CmsVideoSelector from \"../CoachCMSVideoSelector\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport CmsDropdown from \"../CoachCMSDropdown\";\r\nimport CmsTagEditor from \"../CoachCMSTagEditor\";\r\n\r\n//global required field rules object, default false\r\nconst ruleSetRequired = [\r\n  {\r\n    required: true,\r\n    message: \"Input required\",\r\n  },\r\n];\r\n\r\n//simple layout configuation objects\r\nconst formLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 12,\r\n    span: 24,\r\n  },\r\n};\r\n\r\n//start of component function\r\nfunction CoachCMS() {\r\n  const [tags, setTags] = useState([]); //used for tags field\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n  const [guestLecturer, setGuestLecturer] = useState(false);\r\n  const [tutorialVideo, setTutorialVideo] = useState(false);\r\n  const [timestampsVisible, setTimestampsVisible] = useState(false);\r\n  const [timestampVideoUrl, setTimestampVideoUrl] = useState(false);\r\n  const [timestampData, setTimestampData] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n  const [tagEditorVisible, setTagEditorVisible] = useState(false);\r\n  const [tagData, setTagData] = useState(false);\r\n  const [lastTagId, setLastTagId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getTagData = async () => {\r\n      const res = await fetch(config.BACKEND_URL_TAGS_GET_ALL_DATA);\r\n      const data = await res.json();\r\n      setTagData(data.sort((a, b) => a.tag - b.tag));\r\n      let tempTagData = data.sort((a, b) => a.key - b.key);\r\n      setLastTagId(tempTagData[tempTagData.length - 1].key);\r\n    };\r\n    getTagData();\r\n  }, [tagEditorVisible]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter(\r\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\r\n    );\r\n\r\n    if (additionalTags.length > 0 && !guestLecturer) {\r\n      setTags([...additionalTags, \"lecture\"]);\r\n    } else if (additionalTags.length > 0 && guestLecturer) {\r\n      setTags([...additionalTags, \"guest lecture\"]);\r\n    } else if (additionalTags.length === 0 && !guestLecturer) {\r\n      setTags([\"lecture\"]);\r\n    } else if (additionalTags.length === 0 && guestLecturer) {\r\n      setTags([\"guest lecture\"]);\r\n    }\r\n  }, [guestLecturer]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\r\n\r\n    if (additionalTags.length > 0 && !tutorialVideo) {\r\n      setTags([...additionalTags]);\r\n    } else if (additionalTags.length > 0 && tutorialVideo) {\r\n      setTags([...additionalTags, \"tutorial\"]);\r\n    }\r\n  }, [tutorialVideo]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  //set form data from api video selector\r\n  const setFormVideoData = (selectData) => {\r\n    setTimestampVideoUrl(selectData.url);\r\n    form.setFieldsValue({\r\n      title: selectData.title,\r\n      video_url: selectData.url,\r\n      thumbnail_url: selectData.thumbnail,\r\n    });\r\n    message.success(\"Video selected. Added to form data.\", 1);\r\n  };\r\n\r\n  //link formatter for form submission object\r\n  const setLinkType = (object, resource) =>\r\n    object ? object.map((obj) => Object.assign(obj, { type: resource })) : [];\r\n\r\n  //submit form function\r\n  const submitForm = (values) => {\r\n    postResource({\r\n      ...values,\r\n      tags: tags,\r\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\r\n      timestamps: timestampData,\r\n      github_links: setLinkType(values.github_links, \"github\"),\r\n      slides: setLinkType(values.slides, \"presentation slide\"),\r\n      other_links: setLinkType(values.other_links, \"additional reading\"),\r\n    });\r\n  };\r\n\r\n  const submitFailed = (value) => {\r\n    value.errorFields.map((value) =>\r\n      message.error(\r\n        `${\r\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\r\n        } field ${value.errors[0].toLowerCase()} `,\r\n        2.5\r\n      )\r\n    );\r\n  };\r\n\r\n  //form reset button function\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    form.setFieldsValue({\r\n      vimeoAPI: \"\",\r\n    });\r\n    setTags([]);\r\n  };\r\n\r\n  //Post request async function\r\n  async function postResource(resource) {\r\n    await fetch(config.BACKEND_URL_ADD_CONTENT, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(resource),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\r\n  }\r\n\r\n  //show modal\r\n  const modalDisplay = () => {\r\n    const videoUrlInputValue = form.getFieldValue(\"video_url\");\r\n    setTimestampVideoUrl(videoUrlInputValue);\r\n    setTimestampsVisible(!timestampsVisible);\r\n  };\r\n\r\n  const modalHide = () => {\r\n    setTimestampsVisible(false);\r\n  };\r\n\r\n  const getTimeStampData = (obj) => {\r\n    setTimestampData(obj.timestamps);\r\n  };\r\n\r\n  const toggleTagDisplay = () => {\r\n    setTagEditorVisible(!tagEditorVisible);\r\n  };\r\n\r\n  //start of rendering\r\n  return (\r\n    <div>\r\n      <TimestampSelector\r\n        timestampsVisible={timestampsVisible}\r\n        modalDisplay={modalDisplay}\r\n        timestampVideoUrl={timestampVideoUrl}\r\n        ruleSetRequired={ruleSetRequired}\r\n        submitFailed={submitFailed}\r\n        modalHide={modalHide}\r\n        getTimeStampData={getTimeStampData}\r\n      />\r\n      <CmsTagEditor\r\n        tagEditorVisible={tagEditorVisible}\r\n        toggleTagDisplay={toggleTagDisplay}\r\n      />\r\n\r\n      <Space direction=\"vertical\">\r\n        <Row justify=\"end\">\r\n          <Space>\r\n            <h1>Lecture Management</h1>\r\n          </Space>\r\n        </Row>\r\n\r\n        <Row justify=\"start\">\r\n          <CmsDropdown toggleTagDisplay={toggleTagDisplay} />\r\n        </Row>\r\n\r\n        <Row justify={\"center\"}>\r\n          <Col span={10}>\r\n            <CmsVideoSelector setFormVideoData={setFormVideoData} />\r\n          </Col>\r\n\r\n          <Col span={13}>\r\n            <h3 style={{ marginBottom: \"1em\" }}>Form Data</h3>\r\n            <Form\r\n              style={{ padding: \"1em\" }}\r\n              {...formLayout}\r\n              name=\"cms\"\r\n              form={form}\r\n              initialValues={{\r\n                remember: false,\r\n              }}\r\n              onFinish={submitForm}\r\n              onFinishFailed={(value) => submitFailed(value)}\r\n            >\r\n              <Form.Item\r\n                label=\"Video Title\"\r\n                name=\"title\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Guest Lecturer\"\r\n                // name=\"guest_lecture_switch\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Switch\r\n                  onChange={() => {\r\n                    setGuestLecturer(!guestLecturer);\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\r\n                name=\"lecturer\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                {!guestLecturer ? (\r\n                  <Select>{tutors.filter((tutor, index) => index > 0)}</Select>\r\n                ) : (\r\n                  <Input />\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Video URL\"\r\n                name=\"video_url\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input onChange={(e) => setTimestampVideoUrl(e.target.value)} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Thumbnail URL\"\r\n                name=\"thumbnail_url\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Tutorial\"\r\n                // name=\"tutorial_switch\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Switch\r\n                  onChange={() => {\r\n                    setTutorialVideo(!tutorialVideo);\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Tags\" rules={ruleSetRequired}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  name=\"tags\"\r\n                  value={tags}\r\n                  placeholder=\"Select tags\"\r\n                  onChange={(value) => {\r\n                    setTags(value);\r\n                  }}\r\n                >\r\n                  {tagData\r\n                    ? tagData.map((value) => (\r\n                        <Option key={value.tag}>{value.tag}</Option>\r\n                      ))\r\n                    : \"\"}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\r\n                name=\"lecture_date\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <DatePicker />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Bootcamp Week\"\r\n                name=\"bootcamp_week\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <InputNumber min={1} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Video Description\"\r\n                name=\"description\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input.TextArea autoSize={{ minRows: 8 }} />\r\n              </Form.Item>\r\n\r\n              <Form.Item label={\"Timestamps\"}>\r\n                <Button\r\n                  onClick={() =>\r\n                    timestampVideoUrl &&\r\n                    timestampVideoUrl.slice(0, 18) === \"https://vimeo.com/\" &&\r\n                    typeof Number(timestampVideoUrl.slice(0, 18)) === \"number\"\r\n                      ? modalDisplay()\r\n                      : message.warn(\r\n                          \"Please select a video or update the video url field\"\r\n                        )\r\n                  }\r\n                >\r\n                  Open Timestamp Editor\r\n                </Button>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Github Links\">\r\n                <Form.List name=\"github_links\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Github Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Slide Links\">\r\n                <Form.List name=\"slides\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Slide Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Other Links\">\r\n                <Form.List name=\"other_links\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Other Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoachCMS;\r\n","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",["138"],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HomeOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport \"./style.css\";\r\nimport socLogo from \"../../images/soc-logo.png\";\r\nimport app from \"../../firebase/Base\";\r\nimport { AuthContext } from \"../../firebase/Auth\";\r\nimport ContentManagementLink from \"../ContentManagementLink\";\r\nimport { AdminUsersContext } from \"../../contexts/adminUsersContext\";\r\nimport { Button, Input, Space, Row, Col } from \"antd\";\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nconst { Search } = Input; //imports Search from ant.d\r\nfunction HeaderBar() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const adminUsers = useContext(AdminUsersContext);\r\n  const { getSearchText } = useContext(SearchContext);\r\n  return (\r\n    <header>\r\n      <Row style={{ height: \"30px\" }}>\r\n        <Col span={24}>\r\n          <Link to=\"/\">\r\n            <img src={socLogo} alt=\"logo\" id=\"soc-logo\" />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={2}></Col>\r\n        <Col span={16}>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear={true}\r\n            onSearch={(value) => getSearchText(value)}\r\n            style={{ width: 200 }}\r\n          />\r\n        </Col>\r\n        <Col span={6}>\r\n          <nav>\r\n            <Space\r\n              size={\"large\"}\r\n              style={{ marginLeft: \"16px\", fontSize: \"16px\" }}\r\n            >\r\n              <Link to=\"/\">\r\n                <HomeOutlined /> Home\r\n              </Link>\r\n              {adminUsers[0].find(\r\n                (user) => user.email === currentUser.email\r\n              ) ? (\r\n                <ContentManagementLink />\r\n              ) : (\r\n                <li style={{ display: \"none\" }}></li>\r\n              )}\r\n              <Link id=\"sign-out-button\" onClick={() => app.auth().signOut()}>\r\n                <LogoutOutlined /> Log Out\r\n              </Link>\r\n            </Space>\r\n          </nav>\r\n        </Col>\r\n      </Row>\r\n    </header>\r\n  );\r\n}\r\nexport default HeaderBar;\r\n","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\config.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\tutors.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js",["139","140"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Table, Form, Input, message, Space } from \"antd\";\r\nimport config from \"../../config\";\r\n\r\nconst CmsTagEditor = ({ tagEditorVisible, toggleTagDisplay }) => {\r\n  const [tagData, setTagData] = useState(false);\r\n  const [lastTagId, setLastTagId] = useState(null);\r\n  const [tagDelete, setTagDelete] = useState(null);\r\n  const [tagAdd, setTagAdd] = useState(null);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    const getTagData = async () => {\r\n      const res = await fetch(config.BACKEND_URL_TAGS_GET_ALL_DATA);\r\n      const data = await res.json();\r\n      setTagData(data);\r\n      let tempTagData = data.sort((a, b) => a.key - b.key);\r\n      setLastTagId(tempTagData[tempTagData.length - 1].key);\r\n    };\r\n    getTagData();\r\n  }, [tagEditorVisible]);\r\n\r\n  useEffect(() => {\r\n    const deleteTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_DELETE + `${tagDelete.key}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setTagData(tagData.filter((tag) => tag.key !== tagDelete.key));\r\n      message.success(`'${tagDelete.tag}' tag has been deleted`);\r\n      setTagDelete(null);\r\n    };\r\n    if (tagDelete) {\r\n      deleteTag();\r\n    }\r\n  }, [tagDelete]);\r\n\r\n  useEffect(() => {\r\n    const addTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_ADD, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ tag: tagAdd }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      setTagData([...tagData, { key: lastTagId, tag: tagAdd }]);\r\n      message.success(`'${tagAdd}' tag has been added`);\r\n      setTagAdd(null);\r\n    };\r\n    if (tagAdd) {\r\n      addTag();\r\n    }\r\n  }, [tagAdd]);\r\n  console.log(\"tag modal rerender\");\r\n  const { Column } = Table;\r\n\r\n  const submitTag = (submittedTag) => {\r\n    let tagCheck = null;\r\n\r\n    if (tagData) {\r\n      tagCheck = tagData.some((value) => value.tag === submittedTag.name);\r\n      if (tagCheck) {\r\n        message.error(`Tag already exists`);\r\n        form.resetFields();\r\n      } else {\r\n        setLastTagId(lastTagId + 1);\r\n        setTagAdd(submittedTag.name);\r\n        form.resetFields();\r\n      }\r\n    } else {\r\n      setLastTagId(lastTagId + 1);\r\n      setTagAdd(submittedTag.name);\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={tagEditorVisible}\r\n      onCancel={toggleTagDisplay}\r\n      footer={null}\r\n      closable\r\n      destroyOnClose\r\n    >\r\n      <Form name=\"tagform\" onFinish={submitTag} form={form}>\r\n        <Space>\r\n          <Form.Item label=\"Tag Name\" name=\"name\" rules={[{ required: true }]}>\r\n            <Space>\r\n              <Input placeholder=\"Enter tag name\" style={{ width: \"200px\" }} />\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n\r\n      <Table\r\n        dataSource={tagData}\r\n        size=\"small\"\r\n        pagination={{ pageSize: 50 }}\r\n        scroll={{ y: 500 }}\r\n      >\r\n        <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\r\n        <Column title=\"Tag\" dataIndex=\"tag\" key=\"tag\" />\r\n        <Column\r\n          title=\"Delete\"\r\n          key=\"delete\"\r\n          render={(record) => (\r\n            <Button onClick={() => setTagDelete(record)}>x</Button>\r\n          )}\r\n        />\r\n      </Table>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CmsTagEditor;\r\n","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",["141","142","143"],"import React, { useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport TagFilter from \"../TagFilter\";\r\nimport TagDropdown from \"../TagDropdown\";\r\nimport weeks from \"../../data/weeks\";\r\nimport tutors from \"../../data/tutors\";\r\nimport { tags } from \"../../data/tags\";\r\nimport { Col, Row, Space } from \"antd\";\r\n\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\n\r\nfunction FilterBox() {\r\n  const { getSearchTags, getSearchWeek, getSearchLecturer } = useContext(\r\n    SearchContext\r\n  );\r\n\r\n  return (\r\n    <div id=\"filter-box\">\r\n      <TagFilter data={tags} text=\"Tags\" searchTags={getSearchTags} />\r\n\r\n      <TagDropdown data={weeks} searchFunction={getSearchWeek} />\r\n\r\n      <TagDropdown data={tutors} searchFunction={getSearchLecturer} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterBox;\r\n","C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\tags.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\data\\weeks.js",[],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js",[],["144","145"],"C:\\Users\\bootcamp4\\Documents\\SoC\\school-of-code.tmp\\4-week-project\\client\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":8,"column":59,"nodeType":"152","messageId":"153","endLine":8,"endColumn":66},{"ruleId":"150","severity":1,"message":"154","line":9,"column":9,"nodeType":"152","messageId":"153","endLine":9,"endColumn":14},{"ruleId":"150","severity":1,"message":"155","line":9,"column":27,"nodeType":"152","messageId":"153","endLine":9,"endColumn":31},{"ruleId":"150","severity":1,"message":"156","line":9,"column":33,"nodeType":"152","messageId":"153","endLine":9,"endColumn":37},{"ruleId":"150","severity":1,"message":"157","line":64,"column":10,"nodeType":"152","messageId":"153","endLine":64,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":91,"column":6,"nodeType":"160","endLine":91,"endColumn":21,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"159","line":101,"column":6,"nodeType":"160","endLine":101,"endColumn":21,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"163","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":16},{"ruleId":"158","severity":1,"message":"164","line":35,"column":6,"nodeType":"160","endLine":35,"endColumn":17,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":54,"column":6,"nodeType":"160","endLine":54,"endColumn":14,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":13},{"ruleId":"150","severity":1,"message":"169","line":8,"column":15,"nodeType":"152","messageId":"153","endLine":8,"endColumn":18},{"ruleId":"150","severity":1,"message":"170","line":8,"column":20,"nodeType":"152","messageId":"153","endLine":8,"endColumn":25},{"ruleId":"146","replacedBy":"171"},{"ruleId":"148","replacedBy":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Title' is assigned a value but never used.","'Text' is assigned a value but never used.","'Link' is assigned a value but never used.","'lastTagId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["175"],["176"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'tagData'. Either include it or remove the dependency array. You can also do a functional update 'setTagData(t => ...)' if you only need 'tagData' in the 'setTagData' call.",["177"],"React Hook useEffect has missing dependencies: 'lastTagId' and 'tagData'. Either include them or remove the dependency array. You can also do a functional update 'setTagData(t => ...)' if you only need 'tagData' in the 'setTagData' call.",["178"],"'Col' is defined but never used.","'Row' is defined but never used.","'Space' is defined but never used.",["173"],["174"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"187","text":"188"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"189","text":"190"},"Update the dependencies array to be: [tagData, tagDelete]",{"range":"191","text":"192"},"Update the dependencies array to be: [lastTagId, tagAdd, tagData]",{"range":"193","text":"194"},[2917,2932],"[guestLecturer, tags]",[3247,3262],"[tags, tutorialVideo]",[1241,1252],"[tagData, tagDelete]",[1732,1740],"[lastTagId, tagAdd, tagData]"]