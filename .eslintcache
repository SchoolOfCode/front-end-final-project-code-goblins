[{"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"3","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"4","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"5","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"9","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"10","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"11","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"12","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"13","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"14","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"15","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js":"16","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js":"17","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"18","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"19","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"20","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js":"21","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js":"22","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js":"23","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js":"24","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js":"25","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js":"26","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js":"27","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js":"28","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js":"29","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js":"30","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSLectureEditor\\index.js":"31"},{"size":913,"mtime":1610097440760,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1609945864379,"results":"34","hashOfConfig":"33"},{"size":1900,"mtime":1610513232271,"results":"35","hashOfConfig":"33"},{"size":668,"mtime":1610040754738,"results":"36","hashOfConfig":"33"},{"size":492,"mtime":1609945864375,"results":"37","hashOfConfig":"33"},{"size":1674,"mtime":1610510000963,"results":"38","hashOfConfig":"33"},{"size":475,"mtime":1609945864377,"results":"39","hashOfConfig":"33"},{"size":159,"mtime":1609945864376,"results":"40","hashOfConfig":"33"},{"size":512,"mtime":1609945864374,"results":"41","hashOfConfig":"33"},{"size":174,"mtime":1609945864374,"results":"42","hashOfConfig":"33"},{"size":3830,"mtime":1610518687445,"results":"43","hashOfConfig":"33"},{"size":19856,"mtime":1610461799359,"results":"44","hashOfConfig":"33"},{"size":3056,"mtime":1610510042214,"results":"45","hashOfConfig":"33"},{"size":1908,"mtime":1610517106535,"results":"46","hashOfConfig":"33"},{"size":3524,"mtime":1610488521132,"results":"47","hashOfConfig":"33"},{"size":373,"mtime":1610143243832,"results":"48","hashOfConfig":"33"},{"size":970,"mtime":1610143243831,"results":"49","hashOfConfig":"33"},{"size":166,"mtime":1609945864370,"results":"50","hashOfConfig":"33"},{"size":3768,"mtime":1610461799363,"results":"51","hashOfConfig":"33"},{"size":2344,"mtime":1610518345137,"results":"52","hashOfConfig":"33"},{"size":1148,"mtime":1610512598334,"results":"53","hashOfConfig":"33"},{"size":556,"mtime":1610510689269,"results":"54","hashOfConfig":"33"},{"size":656,"mtime":1610511126216,"results":"55","hashOfConfig":"33"},{"size":5246,"mtime":1610379190519,"results":"56","hashOfConfig":"33"},{"size":1095,"mtime":1610470324403,"results":"57","hashOfConfig":"33"},{"size":4956,"mtime":1610379190520,"results":"58","hashOfConfig":"33"},{"size":620,"mtime":1610359028734,"results":"59","hashOfConfig":"33"},{"size":898,"mtime":1610461799360,"results":"60","hashOfConfig":"33"},{"size":781,"mtime":1610461799361,"results":"61","hashOfConfig":"33"},{"size":5512,"mtime":1610461799362,"results":"62","hashOfConfig":"33"},{"size":6106,"mtime":1610517189095,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tl36v",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js",[],["129","130"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["131","132"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Space,\r\n  Select,\r\n  Switch,\r\n  message,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TimestampSelector from \"../CoachCMSTimestampSelector\";\r\nimport config from \"../../config\";\r\nimport CmsVideoSelector from \"../CoachCMSVideoSelector\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport CmsDropdown from \"../CoachCMSDropdown\";\r\nimport CmsTagEditor from \"../CoachCMSTagEditor\";\r\nimport CmsLecturerEditor from \"../CoachCMSLectureEditor\";\r\n\r\n//global required field rules object, default false\r\nconst ruleSetRequired = [\r\n  {\r\n    required: true,\r\n    message: \"Input required\",\r\n  },\r\n];\r\n\r\n//simple layout configuation objects\r\nconst formLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 12,\r\n    span: 24,\r\n  },\r\n};\r\n\r\n//start of component function\r\nfunction CoachCMS() {\r\n  const [tags, setTags] = useState([]); //used for tags field\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n  const [guestLecturer, setGuestLecturer] = useState(false);\r\n  const [tutorialVideo, setTutorialVideo] = useState(false);\r\n  const [timestampsVisible, setTimestampsVisible] = useState(false);\r\n  const [timestampVideoUrl, setTimestampVideoUrl] = useState(false);\r\n  const [timestampData, setTimestampData] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  const [tagEditorVisible, setTagEditorVisible] = useState(false);\r\n  const [tagData, setTagData] = useState(false);\r\n  const [lastTagId, setLastTagId] = useState(null);\r\n\r\n  const [lecturerEditorVisible, setLecturerEditorVisible] = useState(false);\r\n  const [lecturerData, setLecturerData] = useState(false);\r\n  const [lastLecturerId, setLastLecturerId] = useState(null);\r\n\r\n  //tag data and last tag ID from db\r\n  useEffect(() => {\r\n    const getTagData = async () => {\r\n      const resTagData = await fetch(config.BACKEND_URL_TAGS_GET_ALL_DATA);\r\n      const data = await resTagData.json();\r\n\r\n      setTagData(data.sort((a, b) => a.tag - b.tag));\r\n\r\n      const resLastKey = await fetch(config.BACKEND_URL_TAGS_LASTKEY);\r\n      const keydata = await resLastKey.json();\r\n\r\n      setLastTagId(Number(keydata[0].last_value));\r\n    };\r\n    getTagData();\r\n  }, [tagEditorVisible]);\r\n\r\n  //lecturer data and last tag ID from db\r\n  useEffect(() => {\r\n    const getLecturerData = async () => {\r\n      const resLecturerData = await fetch(\r\n        config.BACKEND_URL_LECTURERS_GET_ALL_DATA\r\n      );\r\n      const data = await resLecturerData.json();\r\n      setLecturerData(data.sort((a, b) => a.lecturer - b.lecturer));\r\n\r\n      const resLastKey = await fetch(config.BACKEND_URL_LECTURERS_LASTKEY);\r\n      const keydata = await resLastKey.json();\r\n\r\n      setLastLecturerId(Number(keydata[0].last_value));\r\n\r\n      if (data.length > 0) {\r\n        let tempTagData = data.sort((a, b) => a.key - b.key);\r\n        setLastLecturerId(tempTagData[tempTagData.length - 1].key);\r\n      }\r\n    };\r\n    getLecturerData();\r\n  }, [lecturerEditorVisible]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter(\r\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\r\n    );\r\n\r\n    if (additionalTags.length > 0 && !guestLecturer) {\r\n      setTags([...additionalTags, \"lecture\"]);\r\n    } else if (additionalTags.length > 0 && guestLecturer) {\r\n      setTags([...additionalTags, \"guest lecture\"]);\r\n    } else if (additionalTags.length === 0 && !guestLecturer) {\r\n      setTags([\"lecture\"]);\r\n    } else if (additionalTags.length === 0 && guestLecturer) {\r\n      setTags([\"guest lecture\"]);\r\n    }\r\n  }, [guestLecturer]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\r\n\r\n    if (additionalTags.length > 0 && !tutorialVideo) {\r\n      setTags([...additionalTags]);\r\n    } else if (additionalTags.length > 0 && tutorialVideo) {\r\n      setTags([...additionalTags, \"tutorial\"]);\r\n    }\r\n  }, [tutorialVideo]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  //set form data from api video selector\r\n  const setFormVideoData = (selectData) => {\r\n    setTimestampVideoUrl(selectData.url);\r\n    form.setFieldsValue({\r\n      title: selectData.title,\r\n      video_url: selectData.url,\r\n      thumbnail_url: selectData.thumbnail,\r\n    });\r\n    message.success(\"Video selected. Added to form data.\", 1);\r\n  };\r\n\r\n  //link formatter for form submission object\r\n  const setLinkType = (object, resource) =>\r\n    object ? object.map((obj) => Object.assign(obj, { type: resource })) : [];\r\n\r\n  //submit form function\r\n  const submitForm = (values) => {\r\n    postResource({\r\n      ...values,\r\n      tags: tags,\r\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\r\n      timestamps: timestampData,\r\n      github_links: setLinkType(values.github_links, \"github\"),\r\n      slides: setLinkType(values.slides, \"presentation slide\"),\r\n      other_links: setLinkType(values.other_links, \"additional reading\"),\r\n    });\r\n  };\r\n\r\n  const submitFailed = (value) => {\r\n    value.errorFields.map((value) =>\r\n      message.error(\r\n        `${\r\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\r\n        } field ${value.errors[0].toLowerCase()} `,\r\n        2.5\r\n      )\r\n    );\r\n  };\r\n\r\n  //form reset button function\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    form.setFieldsValue({\r\n      vimeoAPI: \"\",\r\n    });\r\n    setTags([]);\r\n  };\r\n\r\n  //Post request async function\r\n  async function postResource(resource) {\r\n    await fetch(config.BACKEND_URL_ADD_CONTENT, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(resource),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\r\n  }\r\n\r\n  //show modal\r\n  const modalDisplay = () => {\r\n    const videoUrlInputValue = form.getFieldValue(\"video_url\");\r\n    setTimestampVideoUrl(videoUrlInputValue);\r\n    setTimestampsVisible(!timestampsVisible);\r\n  };\r\n\r\n  const modalHide = () => {\r\n    setTimestampsVisible(false);\r\n  };\r\n\r\n  const getTimeStampData = (obj) => {\r\n    setTimestampData(obj.timestamps);\r\n  };\r\n\r\n  const toggleTagDisplay = () => {\r\n    setTagEditorVisible(!tagEditorVisible);\r\n  };\r\n\r\n  const toggleLecturerDisplay = () => {\r\n    setLecturerEditorVisible(!lecturerEditorVisible);\r\n  };\r\n\r\n  const updateTagData = (value) => {\r\n    setTagData(value);\r\n  };\r\n\r\n  const updateLastTagData = (value) => {\r\n    setLastTagId(value);\r\n  };\r\n\r\n  const updateLecturerData = (value) => {\r\n    setLecturerData(value);\r\n  };\r\n\r\n  const updateLastLecturerId = (value) => {\r\n    setLastLecturerId(value);\r\n  };\r\n\r\n  //start of rendering\r\n  return (\r\n    <div>\r\n      <TimestampSelector\r\n        timestampsVisible={timestampsVisible}\r\n        modalDisplay={modalDisplay}\r\n        timestampVideoUrl={timestampVideoUrl}\r\n        ruleSetRequired={ruleSetRequired}\r\n        submitFailed={submitFailed}\r\n        modalHide={modalHide}\r\n        getTimeStampData={getTimeStampData}\r\n      />\r\n\r\n      <CmsTagEditor\r\n        tagData={tagData}\r\n        updateTagData={updateTagData}\r\n        tagEditorVisible={tagEditorVisible}\r\n        toggleTagDisplay={toggleTagDisplay}\r\n        lastTagId={lastTagId}\r\n        updateLastTagData={updateLastTagData}\r\n      />\r\n\r\n      <CmsLecturerEditor\r\n        lecturerData={lecturerData}\r\n        updateLecturerData={updateLecturerData}\r\n        lecturerEditorVisible={lecturerEditorVisible}\r\n        toggleLecturerDisplay={toggleLecturerDisplay}\r\n        lastLecturerId={lastLecturerId}\r\n        updateLastLecturerId={updateLastLecturerId}\r\n      />\r\n\r\n      <Space direction=\"vertical\">\r\n        <Row justify=\"end\">\r\n          <Space>\r\n            <h1>Lecture Management</h1>\r\n          </Space>\r\n        </Row>\r\n\r\n        <Row justify=\"start\">\r\n          <CmsDropdown\r\n            toggleTagDisplay={toggleTagDisplay}\r\n            toggleLecturerDisplay={toggleLecturerDisplay}\r\n          />\r\n        </Row>\r\n\r\n        <Row justify={\"center\"}>\r\n          <Col span={10}>\r\n            <CmsVideoSelector setFormVideoData={setFormVideoData} />\r\n          </Col>\r\n\r\n          <Col span={13}>\r\n            <h3 style={{ marginBottom: \"1em\" }}>Form Data</h3>\r\n            <Form\r\n              style={{ padding: \"1em\" }}\r\n              {...formLayout}\r\n              name=\"cms\"\r\n              form={form}\r\n              initialValues={{\r\n                remember: false,\r\n              }}\r\n              onFinish={submitForm}\r\n              onFinishFailed={(value) => submitFailed(value)}\r\n            >\r\n              <Form.Item\r\n                label=\"Video Title\"\r\n                name=\"title\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Guest Lecturer\"\r\n                // name=\"guest_lecture_switch\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Switch\r\n                  onChange={() => {\r\n                    setGuestLecturer(!guestLecturer);\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\r\n                name=\"lecturer\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                {!guestLecturer ? (\r\n                  <Select>\r\n                    {lecturerData ? (\r\n                      lecturerData.map((value) => (\r\n                        <Option key={value.lecturer}>{value.lecturer}</Option>\r\n                      ))\r\n                    ) : (\r\n                      <Option key={\"no data\"}>{\"no data\"}</Option>\r\n                    )}\r\n                  </Select>\r\n                ) : (\r\n                  <Input />\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Video URL\"\r\n                name=\"video_url\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input onChange={(e) => setTimestampVideoUrl(e.target.value)} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Thumbnail URL\"\r\n                name=\"thumbnail_url\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Tutorial\"\r\n                // name=\"tutorial_switch\"\r\n                valuePropName=\"checked\"\r\n              >\r\n                <Switch\r\n                  onChange={() => {\r\n                    setTutorialVideo(!tutorialVideo);\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Tags\" rules={ruleSetRequired}>\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  name=\"tags\"\r\n                  value={tags}\r\n                  placeholder=\"Select tags\"\r\n                  onChange={(value) => {\r\n                    setTags(value);\r\n                  }}\r\n                >\r\n                  {tagData ? (\r\n                    tagData.map((value) => (\r\n                      <Option key={value.tag}>{value.tag}</Option>\r\n                    ))\r\n                  ) : (\r\n                    <Option key={\"no data\"}>{\"no data\"}</Option>\r\n                  )}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\r\n                name=\"lecture_date\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <DatePicker />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Bootcamp Week\"\r\n                name=\"bootcamp_week\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <InputNumber min={1} />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Cohort\" name=\"cohort\" rules={ruleSetRequired}>\r\n                <InputNumber min={1} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Video Description\"\r\n                name=\"description\"\r\n                rules={ruleSetRequired}\r\n              >\r\n                <Input.TextArea autoSize={{ minRows: 8 }} />\r\n              </Form.Item>\r\n\r\n              <Form.Item label={\"Timestamps\"}>\r\n                <Button\r\n                  onClick={() =>\r\n                    timestampVideoUrl &&\r\n                    timestampVideoUrl.slice(0, 18) === \"https://vimeo.com/\" &&\r\n                    typeof Number(timestampVideoUrl.slice(0, 18)) === \"number\"\r\n                      ? modalDisplay()\r\n                      : message.warn(\r\n                          \"Please select a video or update the video url field\"\r\n                        )\r\n                  }\r\n                >\r\n                  Open Timestamp Editor\r\n                </Button>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Github Links\">\r\n                <Form.List name=\"github_links\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Github Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Slide Links\">\r\n                <Form.List name=\"slides\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Slide Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Other Links\">\r\n                <Form.List name=\"other_links\">\r\n                  {(fields, { add, remove }) => (\r\n                    <>\r\n                      {fields.map((field) => (\r\n                        <Space\r\n                          key={field.key}\r\n                          style={{ display: \"flex\", marginBottom: 0 }}\r\n                          align=\"baseline\"\r\n                        >\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"link\"]}\r\n                            fieldKey={[field.fieldKey, \"link\"]}\r\n                          >\r\n                            <Input placeholder=\"url\" />\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"desc\"]}\r\n                            fieldKey={[field.fieldKey, \"desc\"]}\r\n                          >\r\n                            <Input placeholder=\"description\" />\r\n                          </Form.Item>\r\n\r\n                          <Form.Item\r\n                            {...field}\r\n                            name={[field.name, \"uuid\"]}\r\n                            fieldKey={[field.fieldKey, \"uuid\"]}\r\n                            hidden\r\n                            initialValue={uuidv4()}\r\n                          ></Form.Item>\r\n\r\n                          <MinusCircleOutlined\r\n                            onClick={() => remove(field.name)}\r\n                          />\r\n                        </Space>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => add()}\r\n                          icon={<PlusOutlined />}\r\n                        >\r\n                          Add Other Link\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </>\r\n                  )}\r\n                </Form.List>\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Space>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoachCMS;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js",["133","134"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Table,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Space,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport config from \"../../config\";\r\nimport {\r\n  CloseCircleOutlined,\r\n  EditOutlined,\r\n  SaveOutlined,\r\n  StopOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst CmsTagEditor = ({\r\n  tagEditorVisible,\r\n  toggleTagDisplay,\r\n  tagData,\r\n  updateTagData,\r\n  lastTagId,\r\n  updateLastTagData,\r\n}) => {\r\n  const [tagDelete, setTagDelete] = useState(null);\r\n  const [tagAdd, setTagAdd] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [inputDisabled, setInputDisabled] = useState(true);\r\n  const [tagInput, setTagInput] = useState(null);\r\n  const [tagUpdate, setTagUpdate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const deleteTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_DELETE + `${tagDelete.key}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      updateTagData(tagData.filter((tag) => tag.key !== tagDelete.key));\r\n      message.success(`'${tagDelete.tag}' tag has been deleted`);\r\n      setTagDelete(null);\r\n    };\r\n    if (tagDelete) {\r\n      deleteTag();\r\n    }\r\n  }, [tagDelete]);\r\n\r\n  useEffect(() => {\r\n    const addTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_ADD, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ tag: tagAdd }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      updateTagData([...tagData, { key: lastTagId, tag: tagAdd }]);\r\n      message.success(`'${tagAdd}' tag has been added`);\r\n      setTagAdd(null);\r\n    };\r\n    if (tagAdd) {\r\n      addTag();\r\n    }\r\n  }, [tagAdd]);\r\n\r\n  useEffect(() => {\r\n    const updateTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_UPDATE, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(tagUpdate),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    };\r\n    if (tagUpdate) {\r\n      updateTag();\r\n      message.success(`Tag updated`);\r\n      setTagUpdate(null);\r\n    }\r\n  }, [tagUpdate]);\r\n\r\n  const { Column } = Table;\r\n\r\n  const submitTag = (submittedTag) => {\r\n    let tagCheck = null;\r\n\r\n    if (tagData) {\r\n      tagCheck = tagData.some(\r\n        (value) => value.tag.toLowerCase() === submittedTag.name.toLowerCase()\r\n      );\r\n      if (tagCheck) {\r\n        message.error(`Tag already exists`);\r\n        form.resetFields();\r\n      } else {\r\n        updateLastTagData(lastTagId + 1);\r\n        setTagAdd(submittedTag.name);\r\n        form.resetFields();\r\n      }\r\n    } else {\r\n      updateLastTagData(lastTagId + 1);\r\n      setTagAdd(submittedTag.name);\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={tagEditorVisible}\r\n      onCancel={() => {\r\n        toggleTagDisplay();\r\n        setInputDisabled(!inputDisabled);\r\n      }}\r\n      footer={null}\r\n      closable\r\n      destroyOnClose\r\n    >\r\n      <h3>Tag Editor</h3>\r\n      <Form name=\"tagform\" onFinish={submitTag} form={form}>\r\n        <Space>\r\n          <Form.Item label=\"Tag Name\" name=\"name\" rules={[{ required: true }]}>\r\n            <Space>\r\n              <Input\r\n                placeholder=\"Enter tag name\"\r\n                style={{ width: \"200px\" }}\r\n                disabled={inputDisabled}\r\n              />\r\n              <Button type=\"primary\" htmlType=\"submit\" disabled={inputDisabled}>\r\n                Submit\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n\r\n      <Table\r\n        dataSource={tagData}\r\n        size=\"small\"\r\n        pagination={{ pageSize: 50 }}\r\n        scroll={{ y: 500 }}\r\n      >\r\n        <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\r\n        <Column\r\n          title=\"Tag\"\r\n          key=\"tag\"\r\n          render={(record) => (\r\n            <Input\r\n              defaultValue={record.tag}\r\n              bordered={false}\r\n              disabled={inputDisabled}\r\n              onChange={(e) =>\r\n                setTagInput({\r\n                  updateRecord: record.key,\r\n                  updateValue: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Delete\"\r\n          key=\"delete\"\r\n          render={(record) => (\r\n            <Popconfirm\r\n              title={`Are you sure you want to delete '${record.tag}'`}\r\n              okText={`delete`}\r\n              cancelText={`cancel`}\r\n              onConfirm={() => setTagDelete(record)}\r\n              disabled={inputDisabled}\r\n            >\r\n              {inputDisabled ? (\r\n                <StopOutlined style={{ color: \"#ccc\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </Popconfirm>\r\n          )}\r\n        />\r\n      </Table>\r\n      {inputDisabled ? (\r\n        <p style={{ color: \"green\" }}>Viewing Mode</p>\r\n      ) : (\r\n        <p style={{ color: \"red\" }}>Editing Mode</p>\r\n      )}\r\n      <Space>\r\n        <Button\r\n          onClick={() => {\r\n            setInputDisabled(!inputDisabled);\r\n          }}\r\n        >\r\n          Edit <EditOutlined />\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            setTagUpdate(tagInput);\r\n            setTagInput(null);\r\n          }}\r\n          disabled={(inputDisabled && !tagInput) || !tagInput ? true : false}\r\n        >\r\n          Save <SaveOutlined />\r\n        </Button>\r\n      </Space>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CmsTagEditor;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSLectureEditor\\index.js",["135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":123,"column":6,"nodeType":"143","endLine":123,"endColumn":21,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"142","line":133,"column":6,"nodeType":"143","endLine":133,"endColumn":21,"suggestions":"145"},{"ruleId":"141","severity":1,"message":"146","line":47,"column":6,"nodeType":"143","endLine":47,"endColumn":17,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"148","line":66,"column":6,"nodeType":"143","endLine":66,"endColumn":14,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":52,"column":6,"nodeType":"143","endLine":52,"endColumn":22,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"152","line":74,"column":6,"nodeType":"143","endLine":74,"endColumn":19,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["156"],["157"],"React Hook useEffect has missing dependencies: 'tagData' and 'updateTagData'. Either include them or remove the dependency array. If 'updateTagData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"React Hook useEffect has missing dependencies: 'lastTagId', 'tagData', and 'updateTagData'. Either include them or remove the dependency array. If 'updateTagData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"React Hook useEffect has missing dependencies: 'lecturerData' and 'updateLecturerData'. Either include them or remove the dependency array. If 'updateLecturerData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"React Hook useEffect has missing dependencies: 'lastLecturerId', 'lecturerData', and 'updateLecturerData'. Either include them or remove the dependency array. If 'updateLecturerData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"174","text":"175"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"176","text":"177"},"Update the dependencies array to be: [tagData, tagDelete, updateTagData]",{"range":"178","text":"179"},"Update the dependencies array to be: [lastTagId, tagAdd, tagData, updateTagData]",{"range":"180","text":"181"},"Update the dependencies array to be: [lecturerData, lecturerDelete, updateLecturerData]",{"range":"182","text":"183"},"Update the dependencies array to be: [lastLecturerId, lecturerAdd, lecturerData, updateLecturerData]",{"range":"184","text":"185"},[3926,3941],"[guestLecturer, tags]",[4256,4271],"[tags, tutorialVideo]",[1161,1172],"[tagData, tagDelete, updateTagData]",[1655,1663],"[lastTagId, tagAdd, tagData, updateTagData]",[1344,1360],"[lecturerData, lecturerDelete, updateLecturerData]",[1932,1945],"[lastLecturerId, lecturerAdd, lecturerData, updateLecturerData]"]