[{"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"3","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"4","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"5","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"9","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"10","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"11","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"12","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"13","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"14","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"15","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js":"16","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js":"17","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"18","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"19","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"20","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js":"21","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js":"22","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js":"23","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js":"24","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js":"25","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js":"26","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js":"27"},{"size":913,"mtime":1610097440760,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1609945864379,"results":"30","hashOfConfig":"29"},{"size":1721,"mtime":1610212636672,"results":"31","hashOfConfig":"29"},{"size":668,"mtime":1610040754738,"results":"32","hashOfConfig":"29"},{"size":492,"mtime":1609945864375,"results":"33","hashOfConfig":"29"},{"size":1674,"mtime":1610212636666,"results":"34","hashOfConfig":"29"},{"size":475,"mtime":1609945864377,"results":"35","hashOfConfig":"29"},{"size":159,"mtime":1609945864376,"results":"36","hashOfConfig":"29"},{"size":512,"mtime":1609945864374,"results":"37","hashOfConfig":"29"},{"size":174,"mtime":1609945864374,"results":"38","hashOfConfig":"29"},{"size":2069,"mtime":1610260371717,"results":"39","hashOfConfig":"29"},{"size":15621,"mtime":1610306251685,"results":"40","hashOfConfig":"29"},{"size":3056,"mtime":1610306791441,"results":"41","hashOfConfig":"29"},{"size":2003,"mtime":1610143243827,"results":"42","hashOfConfig":"29"},{"size":2466,"mtime":1610040743899,"results":"43","hashOfConfig":"29"},{"size":373,"mtime":1610143243832,"results":"44","hashOfConfig":"29"},{"size":970,"mtime":1610143243831,"results":"45","hashOfConfig":"29"},{"size":166,"mtime":1609945864370,"results":"46","hashOfConfig":"29"},{"size":3725,"mtime":1610212636668,"results":"47","hashOfConfig":"29"},{"size":763,"mtime":1610212636669,"results":"48","hashOfConfig":"29"},{"size":1174,"mtime":1610143243829,"results":"49","hashOfConfig":"29"},{"size":516,"mtime":1610212636670,"results":"50","hashOfConfig":"29"},{"size":517,"mtime":1610143243832,"results":"51","hashOfConfig":"29"},{"size":5221,"mtime":1610300493392,"results":"52","hashOfConfig":"29"},{"size":311,"mtime":1610260226682,"results":"53","hashOfConfig":"29"},{"size":4360,"mtime":1610301292905,"results":"54","hashOfConfig":"29"},{"size":620,"mtime":1610262186201,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"tl36v",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js",[],["113","114"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["115","116"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Space,\r\n  Select,\r\n  Switch,\r\n  message,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { selectTags } from \"../../data/tags\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport tutors from \"../../data/tutors\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TimestampSelector from \"../CoachCMSTimestampSelector\";\r\nimport config from \"../../config\";\r\nimport CmsVideoSelector from \"../CoachCMSVideoSelector\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n//global required field rules object, default false\r\nconst ruleSetRequired = [\r\n  {\r\n    required: true,\r\n    message: \"Input required\",\r\n  },\r\n];\r\n\r\n//simple layout configuation objects\r\nconst formLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 19,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 12,\r\n    span: 24,\r\n  },\r\n};\r\n\r\n//start of component function\r\nfunction CoachCMS() {\r\n  const [tags, setTags] = useState([]); //used for tags field\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n  const [guestLecturer, setGuestLecturer] = useState(false);\r\n  const [tutorialVideo, setTutorialVideo] = useState(false);\r\n  const [timestampsVisible, setTimestampsVisible] = useState(false);\r\n  const [timestampVideoUrl, setTimestampVideoUrl] = useState(false);\r\n  const [timestampData, setTimestampData] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter(\r\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\r\n    );\r\n\r\n    if (additionalTags.length > 0 && !guestLecturer) {\r\n      setTags([...additionalTags, \"lecture\"]);\r\n    } else if (additionalTags.length > 0 && guestLecturer) {\r\n      setTags([...additionalTags, \"guest lecture\"]);\r\n    } else if (additionalTags.length === 0 && !guestLecturer) {\r\n      setTags([\"lecture\"]);\r\n    } else if (additionalTags.length === 0 && guestLecturer) {\r\n      setTags([\"guest lecture\"]);\r\n    }\r\n  }, [guestLecturer]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\r\n\r\n    if (additionalTags.length > 0 && !tutorialVideo) {\r\n      setTags([...additionalTags]);\r\n    } else if (additionalTags.length > 0 && tutorialVideo) {\r\n      setTags([...additionalTags, \"tutorial\"]);\r\n    }\r\n  }, [tutorialVideo]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  //set form data from api video selector\r\n  const setFormVideoData = (selectData) => {\r\n    setTimestampVideoUrl(selectData.url);\r\n    form.setFieldsValue({\r\n      title: selectData.title,\r\n      video_url: selectData.url,\r\n      thumbnail_url: selectData.thumbnail,\r\n    });\r\n    message.success(\"Video selected. Added to form data.\", 1);\r\n  };\r\n\r\n  //link formatter for form submission object\r\n  const setLinkType = (object, resource) =>\r\n    object ? object.map((obj) => Object.assign(obj, { type: resource })) : [];\r\n\r\n  //submit form function\r\n  const submitForm = (values) => {\r\n    postResource({\r\n      ...values,\r\n      tags: tags,\r\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\r\n      timestamps: timestampData,\r\n      github_links: setLinkType(values.github_links, \"github\"),\r\n      slides: setLinkType(values.slides, \"presentation slide\"),\r\n      other_links: setLinkType(values.other_links, \"additional reading\"),\r\n    });\r\n  };\r\n\r\n  const submitFailed = (value) => {\r\n    value.errorFields.map((value) =>\r\n      message.error(\r\n        `${\r\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\r\n        } field ${value.errors[0].toLowerCase()} `,\r\n        2.5\r\n      )\r\n    );\r\n  };\r\n\r\n  //form reset button function\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    form.setFieldsValue({\r\n      vimeoAPI: \"\",\r\n    });\r\n    setTags([]);\r\n  };\r\n\r\n  //Post request async function\r\n  async function postResource(resource) {\r\n    await fetch(config.BACKEND_URL_ADD_CONTENT, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(resource),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\r\n  }\r\n\r\n  //show modal\r\n  const modalDisplay = () => {\r\n    const videoUrlInputValue = form.getFieldValue(\"video_url\");\r\n    setTimestampVideoUrl(videoUrlInputValue);\r\n    setTimestampsVisible(!timestampsVisible);\r\n  };\r\n\r\n  const modalHide = () => {\r\n    setTimestampsVisible(false);\r\n  };\r\n\r\n  const getTimeStampData = (obj) => {\r\n    setTimestampData(obj.timestamps);\r\n  };\r\n\r\n  //start of rendering\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={24}>\r\n          <h1>CMS</h1>\r\n          <TimestampSelector\r\n            timestampsVisible={timestampsVisible}\r\n            modalDisplay={modalDisplay}\r\n            timestampVideoUrl={timestampVideoUrl}\r\n            ruleSetRequired={ruleSetRequired}\r\n            submitFailed={submitFailed}\r\n            modalHide={modalHide}\r\n            getTimeStampData={getTimeStampData}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row justify={\"center\"}>\r\n        <Col span={10}>\r\n          <CmsVideoSelector setFormVideoData={setFormVideoData} />\r\n        </Col>\r\n\r\n        <Col span={14}>\r\n          <h3 style={{ marginBottom: \"1em\" }}>Form Data</h3>\r\n          <Form\r\n            style={{ padding: \"1em\" }}\r\n            {...formLayout}\r\n            name=\"cms\"\r\n            form={form}\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={(value) => submitFailed(value)}\r\n          >\r\n            <Form.Item label=\"Video Title\" name=\"title\" rules={ruleSetRequired}>\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Guest Lecturer\"\r\n              // name=\"guest_lecture_switch\"\r\n              valuePropName=\"checked\"\r\n            >\r\n              <Switch\r\n                onChange={() => {\r\n                  setGuestLecturer(!guestLecturer);\r\n                }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\r\n              name=\"lecturer\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              {!guestLecturer ? (\r\n                <Select>{tutors.filter((tutor, index) => index > 0)}</Select>\r\n              ) : (\r\n                <Input />\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Video URL\"\r\n              name=\"video_url\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              <Input onChange={(e) => setTimestampVideoUrl(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Thumbnail URL\"\r\n              name=\"thumbnail_url\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Tutorial\"\r\n              // name=\"tutorial_switch\"\r\n              valuePropName=\"checked\"\r\n            >\r\n              <Switch\r\n                onChange={() => {\r\n                  setTutorialVideo(!tutorialVideo);\r\n                }}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Tags\" rules={ruleSetRequired}>\r\n              <Select\r\n                mode=\"multiple\"\r\n                name=\"tags\"\r\n                value={tags}\r\n                placeholder=\"Select tags\"\r\n                onChange={(value) => {\r\n                  setTags(value);\r\n                }}\r\n              >\r\n                {selectTags}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\r\n              name=\"lecture_date\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              <DatePicker />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Bootcamp Week\"\r\n              name=\"bootcamp_week\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              <InputNumber min={1} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Video Description\"\r\n              name=\"description\"\r\n              rules={ruleSetRequired}\r\n            >\r\n              <Input.TextArea autoSize={{ minRows: 8 }} />\r\n            </Form.Item>\r\n\r\n            <Form.Item label={\"Timestamps\"}>\r\n              <Button\r\n                onClick={() =>\r\n                  timestampVideoUrl &&\r\n                  timestampVideoUrl.slice(0, 18) === \"https://vimeo.com/\" &&\r\n                  typeof Number(timestampVideoUrl.slice(0, 18)) === \"number\"\r\n                    ? modalDisplay()\r\n                    : message.warn(\r\n                        \"Please select a video or update the video url field\"\r\n                      )\r\n                }\r\n              >\r\n                Open Timestamp Editor\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Github Links\">\r\n              <Form.List name=\"github_links\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map((field) => (\r\n                      <Space\r\n                        key={field.key}\r\n                        style={{ display: \"flex\", marginBottom: 0 }}\r\n                        align=\"baseline\"\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"link\"]}\r\n                          fieldKey={[field.fieldKey, \"link\"]}\r\n                        >\r\n                          <Input placeholder=\"url\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"desc\"]}\r\n                          fieldKey={[field.fieldKey, \"desc\"]}\r\n                        >\r\n                          <Input placeholder=\"description\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"uuid\"]}\r\n                          fieldKey={[field.fieldKey, \"uuid\"]}\r\n                          hidden\r\n                          initialValue={uuidv4()}\r\n                        ></Form.Item>\r\n\r\n                        <MinusCircleOutlined\r\n                          onClick={() => remove(field.name)}\r\n                        />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        Add Github Link\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Slide Links\">\r\n              <Form.List name=\"slides\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map((field) => (\r\n                      <Space\r\n                        key={field.key}\r\n                        style={{ display: \"flex\", marginBottom: 0 }}\r\n                        align=\"baseline\"\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"link\"]}\r\n                          fieldKey={[field.fieldKey, \"link\"]}\r\n                        >\r\n                          <Input placeholder=\"url\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"desc\"]}\r\n                          fieldKey={[field.fieldKey, \"desc\"]}\r\n                        >\r\n                          <Input placeholder=\"description\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"uuid\"]}\r\n                          fieldKey={[field.fieldKey, \"uuid\"]}\r\n                          hidden\r\n                          initialValue={uuidv4()}\r\n                        ></Form.Item>\r\n\r\n                        <MinusCircleOutlined\r\n                          onClick={() => remove(field.name)}\r\n                        />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        Add Slide Link\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Other Links\">\r\n              <Form.List name=\"other_links\">\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map((field) => (\r\n                      <Space\r\n                        key={field.key}\r\n                        style={{ display: \"flex\", marginBottom: 0 }}\r\n                        align=\"baseline\"\r\n                      >\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"link\"]}\r\n                          fieldKey={[field.fieldKey, \"link\"]}\r\n                        >\r\n                          <Input placeholder=\"url\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"desc\"]}\r\n                          fieldKey={[field.fieldKey, \"desc\"]}\r\n                        >\r\n                          <Input placeholder=\"description\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          {...field}\r\n                          name={[field.name, \"uuid\"]}\r\n                          fieldKey={[field.fieldKey, \"uuid\"]}\r\n                          hidden\r\n                          initialValue={uuidv4()}\r\n                        ></Form.Item>\r\n\r\n                        <MinusCircleOutlined\r\n                          onClick={() => remove(field.name)}\r\n                        />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"dashed\"\r\n                        onClick={() => add()}\r\n                        icon={<PlusOutlined />}\r\n                      >\r\n                        Add Other Link\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoachCMS;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js",[],["117","118"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":76,"column":6,"nodeType":"125","endLine":76,"endColumn":21,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"124","line":86,"column":6,"nodeType":"125","endLine":86,"endColumn":21,"suggestions":"127"},{"ruleId":"119","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["132"],["133"],["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"138","text":"139"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"140","text":"141"},[2371,2386],"[guestLecturer, tags]",[2701,2716],"[tags, tutorialVideo]"]