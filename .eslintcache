[{"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"3","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"4","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"5","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"9","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"10","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"11","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"12","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"13","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"14","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"15","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js":"16","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSLectureEditor\\index.js":"17","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js":"18","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js":"19","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js":"20","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js":"21","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"22","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"23","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"24","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js":"25","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js":"26","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Footer\\index.js":"27"},{"size":913,"mtime":1610097440760,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1609945864379,"results":"30","hashOfConfig":"29"},{"size":492,"mtime":1609945864375,"results":"31","hashOfConfig":"29"},{"size":2229,"mtime":1610569981900,"results":"32","hashOfConfig":"29"},{"size":668,"mtime":1610040754738,"results":"33","hashOfConfig":"29"},{"size":2247,"mtime":1610575701053,"results":"34","hashOfConfig":"29"},{"size":475,"mtime":1609945864377,"results":"35","hashOfConfig":"29"},{"size":159,"mtime":1609945864376,"results":"36","hashOfConfig":"29"},{"size":5484,"mtime":1610580150573,"results":"37","hashOfConfig":"29"},{"size":20474,"mtime":1610589567168,"results":"38","hashOfConfig":"29"},{"size":512,"mtime":1609945864374,"results":"39","hashOfConfig":"29"},{"size":174,"mtime":1609945864374,"results":"40","hashOfConfig":"29"},{"size":1857,"mtime":1610564631820,"results":"41","hashOfConfig":"29"},{"size":3303,"mtime":1610588856406,"results":"42","hashOfConfig":"29"},{"size":3507,"mtime":1610558324415,"results":"43","hashOfConfig":"29"},{"size":1095,"mtime":1610531819843,"results":"44","hashOfConfig":"29"},{"size":6106,"mtime":1610517189095,"results":"45","hashOfConfig":"29"},{"size":1128,"mtime":1610589266494,"results":"46","hashOfConfig":"29"},{"size":5512,"mtime":1610461799362,"results":"47","hashOfConfig":"29"},{"size":5571,"mtime":1610531819839,"results":"48","hashOfConfig":"29"},{"size":6548,"mtime":1610588231755,"results":"49","hashOfConfig":"29"},{"size":2560,"mtime":1610569980352,"results":"50","hashOfConfig":"29"},{"size":3768,"mtime":1610461799363,"results":"51","hashOfConfig":"29"},{"size":218,"mtime":1610554080357,"results":"52","hashOfConfig":"29"},{"size":805,"mtime":1610587164832,"results":"53","hashOfConfig":"29"},{"size":1323,"mtime":1610589443421,"results":"54","hashOfConfig":"29"},{"size":406,"mtime":1610557610661,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"tl36v",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js",[],["115","116"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["117","118"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",["119"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\config.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSLectureEditor\\index.js",["120","121"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Table,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Space,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport config from \"../../config\";\r\nimport {\r\n  CloseCircleOutlined,\r\n  EditOutlined,\r\n  SaveOutlined,\r\n  StopOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst CmsLecturerEditor = ({\r\n  lecturerEditorVisible,\r\n  toggleLecturerDisplay,\r\n  lecturerData,\r\n  updateLecturerData,\r\n  lastLecturerId,\r\n  updateLastLecturerId,\r\n}) => {\r\n  const [lecturerDelete, setLecturerDelete] = useState(null);\r\n  const [lecturerAdd, setLecturerAdd] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [inputDisabled, setInputDisabled] = useState(true);\r\n  const [lecturerInput, setLecturerInput] = useState(null);\r\n  const [lecturerUpdate, setLecturerUpdate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const deleteLecturer = async () => {\r\n      await fetch(\r\n        config.BACKEND_URL_LECTURERS_DELETE + `${lecturerDelete.key}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      updateLecturerData(\r\n        lecturerData.filter((lecturer) => lecturer.key !== lecturerDelete.key)\r\n      );\r\n      message.success(`'${lecturerDelete.lecturer}' has been deleted`);\r\n      setLecturerDelete(null);\r\n    };\r\n    if (lecturerDelete) {\r\n      deleteLecturer();\r\n    }\r\n  }, [lecturerDelete]);\r\n\r\n  useEffect(() => {\r\n    const addLecturer = async () => {\r\n      await fetch(config.BACKEND_URL_LECTURERS_ADD, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ lecturer: lecturerAdd }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      updateLecturerData([\r\n        ...lecturerData,\r\n        { key: lastLecturerId, lecturer: lecturerAdd },\r\n      ]);\r\n      message.success(`'${lecturerAdd}' has been added`);\r\n      setLecturerAdd(null);\r\n    };\r\n    if (lecturerAdd) {\r\n      addLecturer();\r\n    }\r\n  }, [lecturerAdd]);\r\n\r\n  useEffect(() => {\r\n    const updateLecturer = async () => {\r\n      await fetch(config.BACKEND_URL_LECTURERS_UPDATE, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(lecturerUpdate),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    };\r\n    if (lecturerUpdate) {\r\n      updateLecturer();\r\n      message.success(`Lecturer updated`);\r\n      setLecturerUpdate(null);\r\n    }\r\n  }, [lecturerUpdate]);\r\n\r\n  const { Column } = Table;\r\n\r\n  const submitLecturer = (submittedLecturer) => {\r\n    let lecturerCheck = null;\r\n\r\n    if (lecturerData) {\r\n      lecturerCheck = lecturerData.some(\r\n        (value) =>\r\n          value.lecturer.toLowerCase() === submittedLecturer.name.toLowerCase()\r\n      );\r\n      if (lecturerCheck) {\r\n        message.error(`Lecturer already exists`);\r\n        form.resetFields();\r\n      } else {\r\n        updateLastLecturerId(lastLecturerId + 1);\r\n        setLecturerAdd(submittedLecturer.name);\r\n        form.resetFields();\r\n      }\r\n    } else {\r\n      updateLastLecturerId(lastLecturerId + 1);\r\n      setLecturerAdd(submittedLecturer.name);\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={lecturerEditorVisible}\r\n      onCancel={() => {\r\n        toggleLecturerDisplay();\r\n        setInputDisabled(!inputDisabled);\r\n      }}\r\n      footer={null}\r\n      closable\r\n      destroyOnClose\r\n    >\r\n      <h3>Lecturer Editor</h3>\r\n      <Form name=\"lecturerform\" onFinish={submitLecturer} form={form}>\r\n        <Space>\r\n          <Form.Item\r\n            label=\"Lecturer Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Space>\r\n              <Input\r\n                placeholder=\"Enter lecturer name\"\r\n                style={{ width: \"200px\" }}\r\n                disabled={inputDisabled}\r\n              />\r\n              <Button type=\"primary\" htmlType=\"submit\" disabled={inputDisabled}>\r\n                Submit\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n\r\n      <Table\r\n        dataSource={lecturerData}\r\n        size=\"small\"\r\n        pagination={{ pageSize: 50 }}\r\n        scroll={{ y: 500 }}\r\n      >\r\n        <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\r\n        <Column\r\n          title=\"Lecturer\"\r\n          key=\"lecturer\"\r\n          render={(record) => (\r\n            <Input\r\n              defaultValue={record.lecturer}\r\n              bordered={false}\r\n              disabled={inputDisabled}\r\n              onChange={(e) =>\r\n                setLecturerInput({\r\n                  updateRecord: record.key,\r\n                  updateValue: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Delete\"\r\n          key=\"delete\"\r\n          render={(record) => (\r\n            <Popconfirm\r\n              title={`Are you sure you want to delete '${record.lecturer}'`}\r\n              okText={`delete`}\r\n              cancelText={`cancel`}\r\n              onConfirm={() => setLecturerDelete(record)}\r\n              disabled={inputDisabled}\r\n            >\r\n              {inputDisabled ? (\r\n                <StopOutlined style={{ color: \"#ccc\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </Popconfirm>\r\n          )}\r\n        />\r\n      </Table>\r\n      {inputDisabled ? (\r\n        <p style={{ color: \"green\" }}>Viewing Mode</p>\r\n      ) : (\r\n        <p style={{ color: \"red\" }}>Editing Mode</p>\r\n      )}\r\n      <Space>\r\n        <Button\r\n          onClick={() => {\r\n            setInputDisabled(!inputDisabled);\r\n          }}\r\n        >\r\n          Edit <EditOutlined />\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setLecturerUpdate(lecturerInput);\r\n            setLecturerInput(null);\r\n          }}\r\n          disabled={\r\n            (inputDisabled && !lecturerInput) || !lecturerInput ? true : false\r\n          }\r\n        >\r\n          Save <SaveOutlined />\r\n        </Button>\r\n      </Space>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CmsLecturerEditor;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDropdown\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTagEditor\\index.js",["122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Table,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Space,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport config from \"../../config\";\r\nimport {\r\n  CloseCircleOutlined,\r\n  EditOutlined,\r\n  SaveOutlined,\r\n  StopOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst CmsTagEditor = ({\r\n  tagEditorVisible,\r\n  toggleTagDisplay,\r\n  tagData,\r\n  updateTagData,\r\n  lastTagId,\r\n  updateLastTagData,\r\n}) => {\r\n  const [tagDelete, setTagDelete] = useState(null);\r\n  const [tagAdd, setTagAdd] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [inputDisabled, setInputDisabled] = useState(true);\r\n  const [tagInput, setTagInput] = useState(null);\r\n  const [tagUpdate, setTagUpdate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const deleteTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_DELETE + `${tagDelete.key}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      updateTagData(tagData.filter((tag) => tag.key !== tagDelete.key));\r\n      message.success(`'${tagDelete.tag}' tag has been deleted`);\r\n      setTagDelete(null);\r\n    };\r\n    if (tagDelete) {\r\n      deleteTag();\r\n    }\r\n  }, [tagDelete]);\r\n\r\n  useEffect(() => {\r\n    const addTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_ADD, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ tag: tagAdd }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      updateTagData([...tagData, { key: lastTagId, tag: tagAdd }]);\r\n      message.success(`'${tagAdd}' tag has been added`);\r\n      setTagAdd(null);\r\n    };\r\n    if (tagAdd) {\r\n      addTag();\r\n    }\r\n  }, [tagAdd]);\r\n\r\n  useEffect(() => {\r\n    const updateTag = async () => {\r\n      await fetch(config.BACKEND_URL_TAGS_UPDATE, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(tagUpdate),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n    };\r\n    if (tagUpdate) {\r\n      updateTag();\r\n      message.success(`Tag updated`);\r\n      setTagUpdate(null);\r\n    }\r\n  }, [tagUpdate]);\r\n\r\n  const { Column } = Table;\r\n\r\n  const submitTag = (submittedTag) => {\r\n    let tagCheck = null;\r\n\r\n    if (tagData) {\r\n      tagCheck = tagData.some(\r\n        (value) => value.tag.toLowerCase() === submittedTag.name.toLowerCase()\r\n      );\r\n      if (tagCheck) {\r\n        message.error(`Tag already exists`);\r\n        form.resetFields();\r\n      } else {\r\n        updateLastTagData(lastTagId + 1);\r\n        setTagAdd(submittedTag.name);\r\n        form.resetFields();\r\n      }\r\n    } else {\r\n      updateLastTagData(lastTagId + 1);\r\n      setTagAdd(submittedTag.name);\r\n      form.resetFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={tagEditorVisible}\r\n      onCancel={() => {\r\n        toggleTagDisplay();\r\n        setInputDisabled(!inputDisabled);\r\n      }}\r\n      footer={null}\r\n      closable\r\n      destroyOnClose\r\n    >\r\n      <h3>Tag Editor</h3>\r\n      <Form name=\"tagform\" onFinish={submitTag} form={form}>\r\n        <Space>\r\n          <Form.Item label=\"Tag Name\" name=\"name\" rules={[{ required: true }]}>\r\n            <Space>\r\n              <Input\r\n                placeholder=\"Enter tag name\"\r\n                style={{ width: \"200px\" }}\r\n                disabled={inputDisabled}\r\n              />\r\n              <Button type=\"primary\" htmlType=\"submit\" disabled={inputDisabled}>\r\n                Submit\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Space>\r\n      </Form>\r\n\r\n      <Table\r\n        dataSource={tagData}\r\n        size=\"small\"\r\n        pagination={{ pageSize: 50 }}\r\n        scroll={{ y: 500 }}\r\n      >\r\n        <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\r\n        <Column\r\n          title=\"Tag\"\r\n          key=\"tag\"\r\n          render={(record) => (\r\n            <Input\r\n              defaultValue={record.tag}\r\n              bordered={false}\r\n              disabled={inputDisabled}\r\n              onChange={(e) =>\r\n                setTagInput({\r\n                  updateRecord: record.key,\r\n                  updateValue: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Delete\"\r\n          key=\"delete\"\r\n          render={(record) => (\r\n            <Popconfirm\r\n              title={`Are you sure you want to delete '${record.tag}'`}\r\n              okText={`delete`}\r\n              cancelText={`cancel`}\r\n              onConfirm={() => setTagDelete(record)}\r\n              disabled={inputDisabled}\r\n            >\r\n              {inputDisabled ? (\r\n                <StopOutlined style={{ color: \"#ccc\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </Popconfirm>\r\n          )}\r\n        />\r\n      </Table>\r\n      {inputDisabled ? (\r\n        <p style={{ color: \"green\" }}>Viewing Mode</p>\r\n      ) : (\r\n        <p style={{ color: \"red\" }}>Editing Mode</p>\r\n      )}\r\n      <Space>\r\n        <Button\r\n          onClick={() => {\r\n            setInputDisabled(!inputDisabled);\r\n          }}\r\n        >\r\n          Edit <EditOutlined />\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            setTagUpdate(tagInput);\r\n            setTagInput(null);\r\n          }}\r\n          disabled={(inputDisabled && !tagInput) || !tagInput ? true : false}\r\n        >\r\n          Save <SaveOutlined />\r\n        </Button>\r\n      </Space>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CmsTagEditor;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js",["124"],"import React, { useRef, useState, useCallback } from \"react\";\r\nimport { Modal, Button, Input, Form, Space, TimePicker, message } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlaySquareFilled,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TimestampSelector = ({\r\n  timestampsVisible,\r\n  modalDisplay,\r\n  timestampVideoUrl,\r\n  ruleSetRequired,\r\n  submitFailed,\r\n  getTimeStampData,\r\n  modalHide,\r\n}) => {\r\n  const player = useRef(null);\r\n  const [form] = Form.useForm();\r\n  const [seekTimeMoment, setSeekTimeMoment] = useState(\r\n    moment(\"00:00:00\", \"HH:mm:ss\")\r\n  );\r\n  const [seekTimeSeconds, setSeekTimeSeconds] = useState(0);\r\n  const [seekTimeString, setSeekTimeString] = useState(\"00:00:00\");\r\n  const [playerBuffering, setPlayerBuffering] = useState(false);\r\n\r\n  const submitForm = useCallback(\r\n    (timestamps) => {\r\n      getTimeStampData(timestamps);\r\n      message.success(\"Timestamps saved\", 1.5, modalHide());\r\n    },\r\n    [getTimeStampData, modalHide]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Timestamp Selector\"\r\n      visible={timestampsVisible}\r\n      onOk={form.submit}\r\n      onCancel={modalDisplay}\r\n      width=\"fit-content\"\r\n      destroyOnClose\r\n      okText={\"Finish\"}\r\n    >\r\n      <>\r\n        {timestampVideoUrl ? (\r\n          <ReactPlayer\r\n            ref={player}\r\n            url={timestampVideoUrl}\r\n            controls={true}\r\n            style={{ marginBottom: \"20px\" }}\r\n            onBuffer={() => setPlayerBuffering(true)}\r\n            onBufferEnd={() => setPlayerBuffering(false)}\r\n          />\r\n        ) : (\r\n          <p>select a video file or add url</p>\r\n        )}\r\n      </>\r\n      <Form\r\n        name=\"cms_timestamps\"\r\n        form={form}\r\n        initialValues={{\r\n          remember: false,\r\n        }}\r\n        onFinish={submitForm}\r\n        onFinishFailed={(value) => submitFailed(value)}\r\n      >\r\n        <Form.Item label=\"Timestamps\" required>\r\n          <Form.List name=\"timestamps\" rules={ruleSetRequired}>\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timeMoment\"]}\r\n                      fieldKey={[field.fieldKey, \"timeMoment\"]}\r\n                      style={{ width: \"140px\" }}\r\n                      rules={ruleSetRequired}\r\n                      initialValue={seekTimeMoment}\r\n                    >\r\n                      <TimePicker />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timeDesc\"]}\r\n                      label=\"Description\"\r\n                      style={{ width: \"350px\" }}\r\n                      fieldKey={[field.fieldKey, \"timeDesc\"]}\r\n                      rules={ruleSetRequired}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timeSecondsValue\"]}\r\n                      fieldKey={[field.fieldKey, \"timeSecondsValue\"]}\r\n                      initialValue={seekTimeSeconds}\r\n                      hidden\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"timeString\"]}\r\n                      fieldKey={[field.fieldKey, \"timeString\"]}\r\n                      initialValue={seekTimeString}\r\n                      hidden\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"uuid\"]}\r\n                      fieldKey={[field.fieldKey, \"uuid\"]}\r\n                      hidden\r\n                      initialValue={uuidv4()}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    disabled={playerBuffering}\r\n                    te\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      const timeString = new Date(\r\n                        Math.floor(player.current.getCurrentTime()) * 1000\r\n                      )\r\n                        .toISOString()\r\n                        .substr(11, 8);\r\n                      setSeekTimeMoment(moment(timeString, \"HH:mm:ss\"));\r\n                      setSeekTimeSeconds(\r\n                        Math.floor(player.current.getCurrentTime())\r\n                      );\r\n                      setSeekTimeString(timeString);\r\n                      add();\r\n                    }}\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    {playerBuffering ? \"Loading Timestamp\" : \"Add Timestamp\"}\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TimestampSelector;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSVideoSelector\\index.js",["125","126","127"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSDescription\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSMenu\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Footer\\index.js",["128","129","130"],"import React from \"react\";\r\nimport { Row, Col, Space } from \"antd\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      {/* <Col\r\n        span={24}\r\n        style={{\r\n          backgroundColor: \"#f2f2f2\",\r\n          bottom: \"0\",\r\n          height: \"500px\",\r\n          border: \"1px solid green\",\r\n          position: \"absolute\",\r\n        }}\r\n      ></Col> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":125,"column":6,"nodeType":"137","endLine":125,"endColumn":21,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"136","line":135,"column":6,"nodeType":"137","endLine":135,"endColumn":21,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":10,"column":9,"nodeType":"142","messageId":"143","endLine":10,"endColumn":13},{"ruleId":"135","severity":1,"message":"144","line":52,"column":6,"nodeType":"137","endLine":52,"endColumn":22,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":74,"column":6,"nodeType":"137","endLine":74,"endColumn":19,"suggestions":"147"},{"ruleId":"135","severity":1,"message":"148","line":47,"column":6,"nodeType":"137","endLine":47,"endColumn":17,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"150","line":66,"column":6,"nodeType":"137","endLine":66,"endColumn":14,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"152","line":6,"column":3,"nodeType":"142","messageId":"143","endLine":6,"endColumn":19},{"ruleId":"140","severity":1,"message":"153","line":11,"column":3,"nodeType":"142","messageId":"143","endLine":11,"endColumn":9},{"ruleId":"135","severity":1,"message":"154","line":51,"column":6,"nodeType":"137","endLine":51,"endColumn":28,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"154","line":65,"column":6,"nodeType":"137","endLine":65,"endColumn":28,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"157","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":13},{"ruleId":"140","severity":1,"message":"158","line":2,"column":15,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"140","severity":1,"message":"159","line":2,"column":20,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["162"],["163"],"no-unused-vars","'Link' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'lecturerData' and 'updateLecturerData'. Either include them or remove the dependency array. If 'updateLecturerData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["164"],"React Hook useEffect has missing dependencies: 'lastLecturerId', 'lecturerData', and 'updateLecturerData'. Either include them or remove the dependency array. If 'updateLecturerData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"React Hook useEffect has missing dependencies: 'tagData' and 'updateTagData'. Either include them or remove the dependency array. If 'updateTagData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"React Hook useEffect has missing dependencies: 'lastTagId', 'tagData', and 'updateTagData'. Either include them or remove the dependency array. If 'updateTagData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"'PlaySquareFilled' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'updateVideoSelectPageOutput'. Either include it or remove the dependency array. If 'updateVideoSelectPageOutput' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],["169"],"'Row' is defined but never used.","'Col' is defined but never used.","'Space' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"185","text":"186"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"187","text":"188"},"Update the dependencies array to be: [lecturerData, lecturerDelete, updateLecturerData]",{"range":"189","text":"190"},"Update the dependencies array to be: [lastLecturerId, lecturerAdd, lecturerData, updateLecturerData]",{"range":"191","text":"192"},"Update the dependencies array to be: [tagData, tagDelete, updateTagData]",{"range":"193","text":"194"},"Update the dependencies array to be: [lastTagId, tagAdd, tagData, updateTagData]",{"range":"195","text":"196"},"Update the dependencies array to be: [modeSelector, paging, updateVideoSelectPageOutput]",{"range":"197","text":"198"},{"range":"199","text":"198"},[4041,4056],"[guestLecturer, tags]",[4371,4386],"[tags, tutorialVideo]",[1344,1360],"[lecturerData, lecturerDelete, updateLecturerData]",[1932,1945],"[lastLecturerId, lecturerAdd, lecturerData, updateLecturerData]",[1161,1172],"[tagData, tagDelete, updateTagData]",[1655,1663],"[lastTagId, tagAdd, tagData, updateTagData]",[1340,1362],"[modeSelector, paging, updateVideoSelectPageOutput]",[1724,1746]]