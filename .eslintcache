[{"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js":"1","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js":"2","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js":"3","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js":"4","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js":"5","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js":"6","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js":"7","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js":"8","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js":"9","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js":"10","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js":"11","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js":"12","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js":"13","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js":"14","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js":"15","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js":"16","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js":"17","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js":"18","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js":"19","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js":"20","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js":"21","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js":"22","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js":"23","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js":"24"},{"size":913,"mtime":1610097440760,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1609945864379,"results":"27","hashOfConfig":"26"},{"size":1721,"mtime":1610172831271,"results":"28","hashOfConfig":"26"},{"size":668,"mtime":1610040754738,"results":"29","hashOfConfig":"26"},{"size":492,"mtime":1609945864375,"results":"30","hashOfConfig":"26"},{"size":1674,"mtime":1610173109244,"results":"31","hashOfConfig":"26"},{"size":475,"mtime":1609945864377,"results":"32","hashOfConfig":"26"},{"size":159,"mtime":1609945864376,"results":"33","hashOfConfig":"26"},{"size":512,"mtime":1609945864374,"results":"34","hashOfConfig":"26"},{"size":174,"mtime":1609945864374,"results":"35","hashOfConfig":"26"},{"size":1959,"mtime":1610173551585,"results":"36","hashOfConfig":"26"},{"size":14382,"mtime":1610200192785,"results":"37","hashOfConfig":"26"},{"size":3240,"mtime":1610174282445,"results":"38","hashOfConfig":"26"},{"size":2003,"mtime":1610143243827,"results":"39","hashOfConfig":"26"},{"size":2466,"mtime":1610040743899,"results":"40","hashOfConfig":"26"},{"size":373,"mtime":1610143243832,"results":"41","hashOfConfig":"26"},{"size":970,"mtime":1610143243831,"results":"42","hashOfConfig":"26"},{"size":166,"mtime":1609945864370,"results":"43","hashOfConfig":"26"},{"size":3725,"mtime":1610172981307,"results":"44","hashOfConfig":"26"},{"size":763,"mtime":1610172966145,"results":"45","hashOfConfig":"26"},{"size":1174,"mtime":1610143243829,"results":"46","hashOfConfig":"26"},{"size":516,"mtime":1610172847637,"results":"47","hashOfConfig":"26"},{"size":517,"mtime":1610143243832,"results":"48","hashOfConfig":"26"},{"size":5125,"mtime":1610174944209,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"tl36v",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\index.js",[],["101","102"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\reportWebVitals.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\searchContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Auth.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\contexts\\adminUsersContext.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\App\\App.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\firebase\\Base.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\adminusers.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Restricted\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\VideoSelectionPage\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMS\\index.js",["103","104"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  InputNumber,\r\n  Space,\r\n  Select,\r\n  Spin,\r\n  Switch,\r\n  message,\r\n} from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { selectTags } from \"../../data/tags\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport tutors from \"../../data/tutors\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\r\nimport { SearchContext } from \"../../contexts/searchContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TimestampSelector from \"../CoachCMSTimestampSelector\";\r\n\r\nconst { Option } = Select;\r\n\r\n//global required field rules object, default false\r\nconst ruleSetRequired = [\r\n  {\r\n    required: true,\r\n    message: \"Input required\",\r\n  },\r\n];\r\n\r\n//simple layout configuation objects\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\n//start of component function\r\nfunction CoachCMS() {\r\n  const [tags, setTags] = useState([]); //used for tags field\r\n  const [vimeoVideoSelect, setVimeoVideoSelect] = useState([]); //used for API call to vimeo for video selector\r\n  const { searchText } = useContext(SearchContext);\r\n  const [previousSearch] = useState(searchText);\r\n  const [guestLecturer, setGuestLecturer] = useState(false);\r\n  const [tutorialVideo, setTutorialVideo] = useState(false);\r\n  const [timestampsVisible, setTimestampsVisible] = useState(false);\r\n  const [timestampVideoUrl, setTimestampVideoUrl] = useState(false);\r\n  const [timestampData, setTimestampData] = useState(\"\");\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter(\r\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\r\n    );\r\n\r\n    if (additionalTags.length > 0 && !guestLecturer) {\r\n      setTags([...additionalTags, \"lecture\"]);\r\n    } else if (additionalTags.length > 0 && guestLecturer) {\r\n      setTags([...additionalTags, \"guest lecture\"]);\r\n    } else if (additionalTags.length === 0 && !guestLecturer) {\r\n      setTags([\"lecture\"]);\r\n    } else if (additionalTags.length === 0 && guestLecturer) {\r\n      setTags([\"guest lecture\"]);\r\n    }\r\n  }, [guestLecturer]);\r\n\r\n  useEffect(() => {\r\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\r\n\r\n    if (additionalTags.length > 0 && !tutorialVideo) {\r\n      setTags([...additionalTags]);\r\n    } else if (additionalTags.length > 0 && tutorialVideo) {\r\n      setTags([...additionalTags, \"tutorial\"]);\r\n    }\r\n  }, [tutorialVideo]);\r\n\r\n  //api call to vimeo for video selection, also creates and populates select component input\r\n  useEffect(() => {\r\n    async function getVimeoVideoList() {\r\n      const response = await fetch(`https://api.vimeo.com/me/videos`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"bearer \" + process.env.REACT_APP_VIMEO_TOKEN,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/vnd.vimeo.*+json;version=3.4\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n\r\n      setVimeoVideoSelect(\r\n        <Select\r\n          style={{ width: 250 }}\r\n          onChange={(value) => {\r\n            setTimestampVideoUrl(value[1]);\r\n            form.setFieldsValue({\r\n              title: value[0],\r\n              video_url: value[1],\r\n              thumbnail_url: value[2],\r\n            });\r\n          }}\r\n        >\r\n          {data.data.map((video) => (\r\n            <Option\r\n              key={video.link}\r\n              value={[\r\n                video.name,\r\n                video.link,\r\n                video.pictures.sizes[5].link,\r\n                video.created_time,\r\n              ]}\r\n            >\r\n              {`${video.name} - ${video.created_time\r\n                .split(\"T\")[0]\r\n                .split(\"-\")\r\n                .reverse()\r\n                .join(\"-\")}`}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n    getVimeoVideoList();\r\n  }, [form]);\r\n\r\n  if (searchText !== previousSearch) {\r\n    return <Redirect exact to=\"/\" />;\r\n  }\r\n\r\n  //link formatter for form submission object\r\n  const setLinkType = (object, resource) =>\r\n    object\r\n      ? object.map((obj) => Object.assign(obj, { type: resource }))\r\n      : [{ type: resource }];\r\n\r\n  //submit form function\r\n  const submitForm = (values) => {\r\n    postResource({\r\n      ...values,\r\n      tags: tags,\r\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\r\n      timestamps: timestampData,\r\n      github_links: setLinkType(values.github_links, \"github\"),\r\n      slides: setLinkType(values.slides, \"presentation slide\"),\r\n      other_links: setLinkType(values.other_links, \"additional reading\"),\r\n    });\r\n  };\r\n\r\n  const submitFailed = (value) => {\r\n    value.errorFields.map((value) =>\r\n      message.error(\r\n        `${\r\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\r\n        } field ${value.errors[0].toLowerCase()} `,\r\n        2.5\r\n      )\r\n    );\r\n  };\r\n\r\n  //form reset button function\r\n  const onReset = () => {\r\n    form.resetFields();\r\n    form.setFieldsValue({\r\n      vimeoAPI: \"\",\r\n    });\r\n    setTags([]);\r\n  };\r\n\r\n  //Post request async function\r\n  async function postResource(resource) {\r\n    const api = \"/\";\r\n    await fetch(process.env.REACT_APP_BACKEND_URL + api, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(resource),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\r\n  }\r\n\r\n  //show modal\r\n  const modalDisplay = () => {\r\n    const videoUrlInputValue = form.getFieldValue(\"video_url\");\r\n    setTimestampVideoUrl(videoUrlInputValue);\r\n    setTimestampsVisible(!timestampsVisible);\r\n  };\r\n\r\n  const modalHide = () => {\r\n    setTimestampsVisible(false);\r\n  };\r\n\r\n  const getTimeStampData = (obj) => {\r\n    setTimestampData(obj.timestamps);\r\n  };\r\n  console.log(timestampVideoUrl);\r\n  //start of rendering\r\n  return (\r\n    <>\r\n      <h1>Coach CMS Form</h1>\r\n      <TimestampSelector\r\n        timestampsVisible={timestampsVisible}\r\n        modalDisplay={modalDisplay}\r\n        timestampVideoUrl={timestampVideoUrl}\r\n        ruleSetRequired={ruleSetRequired}\r\n        submitFailed={submitFailed}\r\n        modalHide={modalHide}\r\n        getTimeStampData={getTimeStampData}\r\n      />\r\n\r\n      <Form\r\n        {...layout}\r\n        name=\"cms\"\r\n        form={form}\r\n        initialValues={{\r\n          remember: false,\r\n        }}\r\n        onFinish={submitForm}\r\n        onFinishFailed={(value) => submitFailed(value)}\r\n      >\r\n        <Form.Item label=\"Vimeo API Video Select\">\r\n          {!!vimeoVideoSelect ? vimeoVideoSelect : <Spin />}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Video Title\" name=\"title\" rules={ruleSetRequired}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Guest Lecturer\" name=\"guest_lecture_switch\">\r\n          <Switch\r\n            onChange={() => {\r\n              setGuestLecturer(!guestLecturer);\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\r\n          name=\"lecturer\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          {!guestLecturer ? (\r\n            <Select allowClear>{tutors.map((tutor) => tutor)}</Select>\r\n          ) : (\r\n            <Input />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Video URL\" name=\"video_url\" rules={ruleSetRequired}>\r\n          <Input onChange={(e) => setTimestampVideoUrl(e.target.value)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Thumbnail URL\"\r\n          name=\"thumbnail_url\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"tutorial\" name=\"tutorial_switch\">\r\n          <Switch\r\n            onChange={() => {\r\n              setTutorialVideo(!tutorialVideo);\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tags\" rules={ruleSetRequired}>\r\n          <Select\r\n            mode=\"multiple\"\r\n            name=\"tags\"\r\n            value={tags}\r\n            placeholder=\"Select tags\"\r\n            onChange={(value) => {\r\n              setTags(value);\r\n            }}\r\n          >\r\n            {selectTags}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\r\n          name=\"lecture_date\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Bootcamp Week\"\r\n          name=\"bootcamp_week\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <InputNumber min={1} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Video Description\"\r\n          name=\"description\"\r\n          rules={ruleSetRequired}\r\n        >\r\n          <Input.TextArea autoSize={{ minRows: 8 }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item label={\"Timestamps\"}>\r\n          <Button\r\n            onClick={() =>\r\n              timestampVideoUrl &&\r\n              timestampVideoUrl.slice(0, 18) === \"https://vimeo.com/\" &&\r\n              typeof Number(timestampVideoUrl.slice(0, 18)) === \"number\"\r\n                ? modalDisplay()\r\n                : message.warn(\r\n                    \"Please select a video or update the video url field\"\r\n                  )\r\n            }\r\n          >\r\n            Open Timestamp Editor\r\n          </Button>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Github Links\">\r\n          <Form.List name=\"github_links\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Github Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Slide Links\">\r\n          <Form.List name=\"slides\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Slide Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Other Links\">\r\n          <Form.List name=\"other_links\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 0 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"link\"]}\r\n                      fieldKey={[field.fieldKey, \"link\"]}\r\n                    >\r\n                      <Input placeholder=\"url\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"desc\"]}\r\n                      fieldKey={[field.fieldKey, \"desc\"]}\r\n                    >\r\n                      <Input placeholder=\"description\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Other Link\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoachCMS;\r\n","C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\LectureViewer\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\HeaderBar\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\Login\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tutors.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\tags.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\ContentManagementLink\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FeedbackForm\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\FilterBox\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagFilter\\index.js",[],["105","106"],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\TagDropdown\\index.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\data\\weeks.js",[],"C:\\Users\\Will\\Documents\\School of Code\\Course\\Project\\front-end-final-project-code-goblins\\src\\components\\CoachCMSTimestampSelector\\index.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":75,"column":6,"nodeType":"113","endLine":75,"endColumn":21,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":85,"column":6,"nodeType":"113","endLine":85,"endColumn":21,"suggestions":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["120"],["121"],["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"126","text":"127"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"128","text":"129"},[2368,2383],"[guestLecturer, tags]",[2698,2713],"[tags, tutorialVideo]"]