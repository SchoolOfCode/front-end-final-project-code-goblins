[{"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/index.js":"1","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/reportWebVitals.js":"2","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/firebase/Auth.js":"3","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/contexts/adminUsersContext.js":"4","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/App/App.js":"5","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/contexts/searchContext.js":"6","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/firebase/Base.js":"7","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/adminusers.js":"8","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/LectureViewer/index.js":"9","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/Login/index.js":"10","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/PrivateRoute/index.js":"11","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/Restricted/index.js":"12","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/VideoSelectionPage/index.js":"13","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/HeaderBar/index.js":"14","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMS/index.js":"15","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/config.js":"16","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/tutors.js":"17","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/FeedbackForm/index.js":"18","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSDropdown/index.js":"19","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/ContentManagementLink/index.js":"20","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSTagEditor/index.js":"21","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSTimestampSelector/index.js":"22","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSVideoSelector/index.js":"23","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/FilterBox/index.js":"24","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/tags.js":"25","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/weeks.js":"26","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSMenu/index.js":"27","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSDescription/index.js":"28","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/TagDropdown/index.js":"29","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/TagFilter/index.js":"30"},{"size":885,"mtime":1610042402011,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1608567028481,"results":"33","hashOfConfig":"32"},{"size":637,"mtime":1610042401919,"results":"34","hashOfConfig":"32"},{"size":476,"mtime":1609860157656,"results":"35","hashOfConfig":"32"},{"size":1602,"mtime":1610374370304,"results":"36","hashOfConfig":"32"},{"size":1651,"mtime":1610374370318,"results":"37","hashOfConfig":"32"},{"size":462,"mtime":1609860157658,"results":"38","hashOfConfig":"32"},{"size":154,"mtime":1609860157657,"results":"39","hashOfConfig":"32"},{"size":2959,"mtime":1610374370314,"results":"40","hashOfConfig":"32"},{"size":2364,"mtime":1610042401913,"results":"41","hashOfConfig":"32"},{"size":491,"mtime":1609860157655,"results":"42","hashOfConfig":"32"},{"size":163,"mtime":1609860157655,"results":"43","hashOfConfig":"32"},{"size":2072,"mtime":1610446164517,"results":"44","hashOfConfig":"32"},{"size":1858,"mtime":1610446164515,"results":"45","hashOfConfig":"32"},{"size":17097,"mtime":1610446164511,"results":"46","hashOfConfig":"32"},{"size":517,"mtime":1610451009692,"results":"47","hashOfConfig":"32"},{"size":353,"mtime":1610374370319,"results":"48","hashOfConfig":"32"},{"size":3655,"mtime":1610446164514,"results":"49","hashOfConfig":"32"},{"size":785,"mtime":1610374370309,"results":"50","hashOfConfig":"32"},{"size":160,"mtime":1609860157652,"results":"51","hashOfConfig":"32"},{"size":5237,"mtime":1610446164512,"results":"52","hashOfConfig":"32"},{"size":5087,"mtime":1610446164513,"results":"53","hashOfConfig":"32"},{"size":4792,"mtime":1610446164513,"results":"54","hashOfConfig":"32"},{"size":738,"mtime":1610374370311,"results":"55","hashOfConfig":"32"},{"size":906,"mtime":1610374370318,"results":"56","hashOfConfig":"32"},{"size":491,"mtime":1610374370319,"results":"57","hashOfConfig":"32"},{"size":594,"mtime":1610374370309,"results":"58","hashOfConfig":"32"},{"size":600,"mtime":1610374370309,"results":"59","hashOfConfig":"32"},{"size":495,"mtime":1610374370316,"results":"60","hashOfConfig":"32"},{"size":1129,"mtime":1610374370317,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1cy6kr1",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/index.js",[],["127","128"],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/reportWebVitals.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/firebase/Auth.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/contexts/adminUsersContext.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/App/App.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/contexts/searchContext.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/firebase/Base.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/adminusers.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/LectureViewer/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/Login/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/PrivateRoute/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/Restricted/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/VideoSelectionPage/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/HeaderBar/index.js",["129"],"import React, { useContext } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport socLogo from \"../../images/soc-logo.png\";\nimport app from \"../../firebase/Base\";\nimport { AuthContext } from \"../../firebase/Auth\";\nimport ContentManagementLink from \"../ContentManagementLink\";\nimport { AdminUsersContext } from \"../../contexts/adminUsersContext\";\nimport { Button, Input, Space } from \"antd\";\nimport { SearchContext } from \"../../contexts/searchContext\";\n\nconst { Search } = Input; //imports Search from ant.d\n\nfunction HeaderBar() {\n  const { currentUser } = useContext(AuthContext);\n  const adminUsers = useContext(AdminUsersContext);\n  const { getSearchText } = useContext(SearchContext);\n\n  return (\n    <header>\n      <div id=\"header-content\">\n        <div id=\"logo-nav-wrapper\">\n          <Link to=\"/\">\n            <img src={socLogo} alt=\"logo\" id=\"soc-logo\" />\n          </Link>\n          <nav>\n            <Space\n              size={\"large\"}\n              style={{ marginLeft: \"16px\", fontSize: \"16px\" }}\n            >\n              <Link to=\"/\">Home</Link>\n\n              {adminUsers[0].find(\n                (user) => user.email === currentUser.email\n              ) ? (\n                <ContentManagementLink />\n              ) : (\n                <li style={{ display: \"none\" }}></li>\n              )}\n              <Button onClick={() => app.auth().signOut()}>Sign Out</Button>\n            </Space>\n          </nav>\n        </div>\n        <div id=\"search-signout-wrapper\">\n          <div id=\"search-box\">\n            <Search\n              placeholder=\"input search text\"\n              allowClear={true}\n              onSearch={(value) => getSearchText(value)}\n              style={{ width: 200 }}\n            />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default HeaderBar;\n","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMS/index.js",["130","131","132"],"import React, { useEffect, useState, useContext } from \"react\";\nimport \"antd/dist/antd.css\";\nimport {\n  Form,\n  Input,\n  Button,\n  DatePicker,\n  InputNumber,\n  Space,\n  Select,\n  Switch,\n  message,\n  Row,\n  Col,\n} from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport tutors from \"../../data/tutors\"; //new datasource, see data folder /******** API + DB TABLE REQUIRED ********/\nimport { SearchContext } from \"../../contexts/searchContext\";\nimport { Redirect } from \"react-router-dom\";\nimport TimestampSelector from \"../CoachCMSTimestampSelector\";\nimport config from \"../../config\";\nimport CmsVideoSelector from \"../CoachCMSVideoSelector\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CmsDropdown from \"../CoachCMSDropdown\";\nimport CmsTagEditor from \"../CoachCMSTagEditor\";\n\n//global required field rules object, default false\nconst ruleSetRequired = [\n  {\n    required: true,\n    message: \"Input required\",\n  },\n];\n\n//simple layout configuation objects\nconst formLayout = {\n  labelCol: {\n    span: 24,\n  },\n  wrapperCol: {\n    span: 24,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 12,\n    span: 24,\n  },\n};\n\n//start of component function\nfunction CoachCMS() {\n  const [tags, setTags] = useState([]); //used for tags field\n  const { searchText } = useContext(SearchContext);\n  const [previousSearch] = useState(searchText);\n  const [guestLecturer, setGuestLecturer] = useState(false);\n  const [tutorialVideo, setTutorialVideo] = useState(false);\n  const [timestampsVisible, setTimestampsVisible] = useState(false);\n  const [timestampVideoUrl, setTimestampVideoUrl] = useState(false);\n  const [timestampData, setTimestampData] = useState(\"\");\n  const [form] = Form.useForm();\n  const [tagEditorVisible, setTagEditorVisible] = useState(false);\n  const [tagData, setTagData] = useState(false);\n  const [lastTagId, setLastTagId] = useState(null);\n\n  useEffect(() => {\n    const getTagData = async () => {\n      const res = await fetch(config.BACKEND_URL_TAGS_GET_ALL_DATA);\n      const data = await res.json();\n      setTagData(data.sort((a, b) => a.tag - b.tag));\n      if (data.length > 0) {\n        let tempTagData = data.sort((a, b) => a.key - b.key);\n        setLastTagId(tempTagData[tempTagData.length - 1].key);\n      }\n    };\n    getTagData();\n  }, [tagEditorVisible]);\n\n  useEffect(() => {\n    const additionalTags = tags.filter(\n      (tag) => tag !== \"lecture\" && tag !== \"guest lecture\"\n    );\n\n    if (additionalTags.length > 0 && !guestLecturer) {\n      setTags([...additionalTags, \"lecture\"]);\n    } else if (additionalTags.length > 0 && guestLecturer) {\n      setTags([...additionalTags, \"guest lecture\"]);\n    } else if (additionalTags.length === 0 && !guestLecturer) {\n      setTags([\"lecture\"]);\n    } else if (additionalTags.length === 0 && guestLecturer) {\n      setTags([\"guest lecture\"]);\n    }\n  }, [guestLecturer]);\n\n  useEffect(() => {\n    const additionalTags = tags.filter((tag) => tag !== \"tutorial\");\n\n    if (additionalTags.length > 0 && !tutorialVideo) {\n      setTags([...additionalTags]);\n    } else if (additionalTags.length > 0 && tutorialVideo) {\n      setTags([...additionalTags, \"tutorial\"]);\n    }\n  }, [tutorialVideo]);\n\n  if (searchText !== previousSearch) {\n    return <Redirect exact to=\"/\" />;\n  }\n\n  const { Option } = Select;\n\n  //set form data from api video selector\n  const setFormVideoData = (selectData) => {\n    setTimestampVideoUrl(selectData.url);\n    form.setFieldsValue({\n      title: selectData.title,\n      video_url: selectData.url,\n      thumbnail_url: selectData.thumbnail,\n    });\n    message.success(\"Video selected. Added to form data.\", 1);\n  };\n\n  //link formatter for form submission object\n  const setLinkType = (object, resource) =>\n    object ? object.map((obj) => Object.assign(obj, { type: resource })) : [];\n\n  //submit form function\n  const submitForm = (values) => {\n    postResource({\n      ...values,\n      tags: tags,\n      date: String(values.lecture_date._d).split(\" \").slice(0, 4).join(\" \"),\n      timestamps: timestampData,\n      github_links: setLinkType(values.github_links, \"github\"),\n      slides: setLinkType(values.slides, \"presentation slide\"),\n      other_links: setLinkType(values.other_links, \"additional reading\"),\n    });\n  };\n\n  const submitFailed = (value) => {\n    value.errorFields.map((value) =>\n      message.error(\n        `${\n          value.name[0].slice(0, 1).toUpperCase() + value.name[0].slice(1)\n        } field ${value.errors[0].toLowerCase()} `,\n        2.5\n      )\n    );\n  };\n\n  //form reset button function\n  const onReset = () => {\n    form.resetFields();\n    form.setFieldsValue({\n      vimeoAPI: \"\",\n    });\n    setTags([]);\n  };\n\n  //Post request async function\n  async function postResource(resource) {\n    await fetch(config.BACKEND_URL_ADD_CONTENT, {\n      method: \"POST\",\n      body: JSON.stringify(resource),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    await message.success(\"Form data submitted successfully\", 1.5, onReset());\n  }\n\n  //show modal\n  const modalDisplay = () => {\n    const videoUrlInputValue = form.getFieldValue(\"video_url\");\n    setTimestampVideoUrl(videoUrlInputValue);\n    setTimestampsVisible(!timestampsVisible);\n  };\n\n  const modalHide = () => {\n    setTimestampsVisible(false);\n  };\n\n  const getTimeStampData = (obj) => {\n    setTimestampData(obj.timestamps);\n  };\n\n  const toggleTagDisplay = () => {\n    setTagEditorVisible(!tagEditorVisible);\n  };\n\n  //start of rendering\n  return (\n    <div>\n      <TimestampSelector\n        timestampsVisible={timestampsVisible}\n        modalDisplay={modalDisplay}\n        timestampVideoUrl={timestampVideoUrl}\n        ruleSetRequired={ruleSetRequired}\n        submitFailed={submitFailed}\n        modalHide={modalHide}\n        getTimeStampData={getTimeStampData}\n      />\n      <CmsTagEditor\n        tagEditorVisible={tagEditorVisible}\n        toggleTagDisplay={toggleTagDisplay}\n      />\n\n      <Space direction=\"vertical\">\n        <Row justify=\"end\">\n          <Space>\n            <h1>Lecture Management</h1>\n          </Space>\n        </Row>\n\n        <Row justify=\"start\">\n          <CmsDropdown toggleTagDisplay={toggleTagDisplay} />\n        </Row>\n\n        <Row justify={\"center\"}>\n          <Col span={10}>\n            <CmsVideoSelector setFormVideoData={setFormVideoData} />\n          </Col>\n\n          <Col span={13}>\n            <h3 style={{ marginBottom: \"1em\" }}>Form Data</h3>\n            <Form\n              style={{ padding: \"1em\" }}\n              {...formLayout}\n              name=\"cms\"\n              form={form}\n              initialValues={{\n                remember: false,\n              }}\n              onFinish={submitForm}\n              onFinishFailed={(value) => submitFailed(value)}\n            >\n              <Form.Item\n                label=\"Video Title\"\n                name=\"title\"\n                rules={ruleSetRequired}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Guest Lecturer\"\n                // name=\"guest_lecture_switch\"\n                valuePropName=\"checked\"\n              >\n                <Switch\n                  onChange={() => {\n                    setGuestLecturer(!guestLecturer);\n                  }}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label={!guestLecturer ? \"Lecturer Name\" : \"Guest Lecturer Name\"}\n                name=\"lecturer\"\n                rules={ruleSetRequired}\n              >\n                {!guestLecturer ? (\n                  <Select>{tutors.filter((tutor, index) => index > 0)}</Select>\n                ) : (\n                  <Input />\n                )}\n              </Form.Item>\n\n              <Form.Item\n                label=\"Video URL\"\n                name=\"video_url\"\n                rules={ruleSetRequired}\n              >\n                <Input onChange={(e) => setTimestampVideoUrl(e.target.value)} />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Thumbnail URL\"\n                name=\"thumbnail_url\"\n                rules={ruleSetRequired}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Tutorial\"\n                // name=\"tutorial_switch\"\n                valuePropName=\"checked\"\n              >\n                <Switch\n                  onChange={() => {\n                    setTutorialVideo(!tutorialVideo);\n                  }}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"Tags\" rules={ruleSetRequired}>\n                <Select\n                  mode=\"multiple\"\n                  name=\"tags\"\n                  value={tags}\n                  placeholder=\"Select tags\"\n                  onChange={(value) => {\n                    setTags(value);\n                  }}\n                >\n                  {tagData ? (\n                    tagData.map((value) => (\n                      <Option key={value.tag}>{value.tag}</Option>\n                    ))\n                  ) : (\n                    <Option key={\"no data\"}>{\"no data\"}</Option>\n                  )}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                label={!guestLecturer ? \"Lecture Date\" : \"Guest Speaker Date\"}\n                name=\"lecture_date\"\n                rules={ruleSetRequired}\n              >\n                <DatePicker />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Bootcamp Week\"\n                name=\"bootcamp_week\"\n                rules={ruleSetRequired}\n              >\n                <InputNumber min={1} />\n              </Form.Item>\n\n              <Form.Item label=\"Cohort\" name=\"cohort\" rules={ruleSetRequired}>\n                <InputNumber min={1} />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Video Description\"\n                name=\"description\"\n                rules={ruleSetRequired}\n              >\n                <Input.TextArea autoSize={{ minRows: 8 }} />\n              </Form.Item>\n\n              <Form.Item label={\"Timestamps\"}>\n                <Button\n                  onClick={() =>\n                    timestampVideoUrl &&\n                    timestampVideoUrl.slice(0, 18) === \"https://vimeo.com/\" &&\n                    typeof Number(timestampVideoUrl.slice(0, 18)) === \"number\"\n                      ? modalDisplay()\n                      : message.warn(\n                          \"Please select a video or update the video url field\"\n                        )\n                  }\n                >\n                  Open Timestamp Editor\n                </Button>\n              </Form.Item>\n\n              <Form.Item label=\"Github Links\">\n                <Form.List name=\"github_links\">\n                  {(fields, { add, remove }) => (\n                    <>\n                      {fields.map((field) => (\n                        <Space\n                          key={field.key}\n                          style={{ display: \"flex\", marginBottom: 0 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"link\"]}\n                            fieldKey={[field.fieldKey, \"link\"]}\n                          >\n                            <Input placeholder=\"url\" />\n                          </Form.Item>\n\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"desc\"]}\n                            fieldKey={[field.fieldKey, \"desc\"]}\n                          >\n                            <Input placeholder=\"description\" />\n                          </Form.Item>\n\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"uuid\"]}\n                            fieldKey={[field.fieldKey, \"uuid\"]}\n                            hidden\n                            initialValue={uuidv4()}\n                          ></Form.Item>\n\n                          <MinusCircleOutlined\n                            onClick={() => remove(field.name)}\n                          />\n                        </Space>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => add()}\n                          icon={<PlusOutlined />}\n                        >\n                          Add Github Link\n                        </Button>\n                      </Form.Item>\n                    </>\n                  )}\n                </Form.List>\n              </Form.Item>\n\n              <Form.Item label=\"Slide Links\">\n                <Form.List name=\"slides\">\n                  {(fields, { add, remove }) => (\n                    <>\n                      {fields.map((field) => (\n                        <Space\n                          key={field.key}\n                          style={{ display: \"flex\", marginBottom: 0 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"link\"]}\n                            fieldKey={[field.fieldKey, \"link\"]}\n                          >\n                            <Input placeholder=\"url\" />\n                          </Form.Item>\n\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"desc\"]}\n                            fieldKey={[field.fieldKey, \"desc\"]}\n                          >\n                            <Input placeholder=\"description\" />\n                          </Form.Item>\n\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"uuid\"]}\n                            fieldKey={[field.fieldKey, \"uuid\"]}\n                            hidden\n                            initialValue={uuidv4()}\n                          ></Form.Item>\n\n                          <MinusCircleOutlined\n                            onClick={() => remove(field.name)}\n                          />\n                        </Space>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => add()}\n                          icon={<PlusOutlined />}\n                        >\n                          Add Slide Link\n                        </Button>\n                      </Form.Item>\n                    </>\n                  )}\n                </Form.List>\n              </Form.Item>\n\n              <Form.Item label=\"Other Links\">\n                <Form.List name=\"other_links\">\n                  {(fields, { add, remove }) => (\n                    <>\n                      {fields.map((field) => (\n                        <Space\n                          key={field.key}\n                          style={{ display: \"flex\", marginBottom: 0 }}\n                          align=\"baseline\"\n                        >\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"link\"]}\n                            fieldKey={[field.fieldKey, \"link\"]}\n                          >\n                            <Input placeholder=\"url\" />\n                          </Form.Item>\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"desc\"]}\n                            fieldKey={[field.fieldKey, \"desc\"]}\n                          >\n                            <Input placeholder=\"description\" />\n                          </Form.Item>\n\n                          <Form.Item\n                            {...field}\n                            name={[field.name, \"uuid\"]}\n                            fieldKey={[field.fieldKey, \"uuid\"]}\n                            hidden\n                            initialValue={uuidv4()}\n                          ></Form.Item>\n\n                          <MinusCircleOutlined\n                            onClick={() => remove(field.name)}\n                          />\n                        </Space>\n                      ))}\n                      <Form.Item>\n                        <Button\n                          type=\"dashed\"\n                          onClick={() => add()}\n                          icon={<PlusOutlined />}\n                        >\n                          Add Other Link\n                        </Button>\n                      </Form.Item>\n                    </>\n                  )}\n                </Form.List>\n              </Form.Item>\n\n              <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Space>\n    </div>\n  );\n}\n\nexport default CoachCMS;\n","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/config.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/tutors.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/FeedbackForm/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSDropdown/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/ContentManagementLink/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSTagEditor/index.js",["133","134"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  Button,\n  Table,\n  Form,\n  Input,\n  message,\n  Space,\n  Popconfirm,\n} from \"antd\";\nimport config from \"../../config\";\nimport {\n  CloseCircleOutlined,\n  EditOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\n\nconst CmsTagEditor = ({ tagEditorVisible, toggleTagDisplay }) => {\n  const [tagData, setTagData] = useState(false);\n  const [lastTagId, setLastTagId] = useState(null);\n  const [tagDelete, setTagDelete] = useState(null);\n  const [tagAdd, setTagAdd] = useState(null);\n  const [form] = Form.useForm();\n  const [inputDisabled, setInputDisabled] = useState(true);\n  const [tagInput, setTagInput] = useState(null);\n  const [tagUpdate, setTagUpdate] = useState(null);\n\n  useEffect(() => {\n    const getTagData = async () => {\n      const res = await fetch(config.BACKEND_URL_TAGS_GET_ALL_DATA);\n      const data = await res.json();\n      setTagData(data);\n      if (data.length > 0) {\n        let tempTagData = data.sort((a, b) => a.key - b.key);\n        setLastTagId(tempTagData[tempTagData.length - 1].key);\n      }\n    };\n    getTagData();\n  }, [tagEditorVisible]);\n\n  useEffect(() => {\n    const deleteTag = async () => {\n      await fetch(config.BACKEND_URL_TAGS_DELETE + `${tagDelete.key}`, {\n        method: \"DELETE\",\n      });\n      setTagData(tagData.filter((tag) => tag.key !== tagDelete.key));\n      message.success(`'${tagDelete.tag}' tag has been deleted`);\n      setTagDelete(null);\n    };\n    if (tagDelete) {\n      deleteTag();\n    }\n  }, [tagDelete]);\n\n  useEffect(() => {\n    const addTag = async () => {\n      await fetch(config.BACKEND_URL_TAGS_ADD, {\n        method: \"POST\",\n        body: JSON.stringify({ tag: tagAdd }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      setTagData([...tagData, { key: lastTagId, tag: tagAdd }]);\n      message.success(`'${tagAdd}' tag has been added`);\n      setTagAdd(null);\n    };\n    if (tagAdd) {\n      addTag();\n    }\n  }, [tagAdd]);\n\n  useEffect(() => {\n    const updateTag = async () => {\n      await fetch(config.BACKEND_URL_TAGS_UPDATE, {\n        method: \"PATCH\",\n        body: JSON.stringify(tagUpdate),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    };\n    if (tagUpdate) {\n      updateTag();\n      message.success(`Tag updated`);\n      setTagUpdate(null);\n    }\n  }, [tagUpdate]);\n\n  const { Column } = Table;\n\n  const submitTag = (submittedTag) => {\n    let tagCheck = null;\n\n    if (tagData) {\n      tagCheck = tagData.some((value) => value.tag === submittedTag.name);\n      if (tagCheck) {\n        message.error(`Tag already exists`);\n        form.resetFields();\n      } else {\n        setLastTagId(lastTagId + 1);\n        setTagAdd(submittedTag.name);\n        form.resetFields();\n      }\n    } else {\n      setLastTagId(lastTagId + 1);\n      setTagAdd(submittedTag.name);\n      form.resetFields();\n    }\n  };\n\n  return (\n    <Modal\n      visible={tagEditorVisible}\n      onCancel={toggleTagDisplay}\n      footer={null}\n      closable\n      destroyOnClose\n    >\n      <h3>Tag Editor</h3>\n      <Form name=\"tagform\" onFinish={submitTag} form={form}>\n        <Space>\n          <Form.Item label=\"Tag Name\" name=\"name\" rules={[{ required: true }]}>\n            <Space>\n              <Input placeholder=\"Enter tag name\" style={{ width: \"200px\" }} />\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Space>\n          </Form.Item>\n        </Space>\n      </Form>\n\n      <Table\n        dataSource={tagData}\n        size=\"small\"\n        pagination={{ pageSize: 50 }}\n        scroll={{ y: 500 }}\n      >\n        <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\n        <Column\n          title=\"Tag\"\n          key=\"tag\"\n          render={(record) => (\n            <Input\n              defaultValue={record.tag}\n              bordered={false}\n              disabled={inputDisabled}\n              onChange={(e) =>\n                setTagInput({\n                  updateRecord: record.key,\n                  updateValue: e.target.value,\n                })\n              }\n            />\n          )}\n        />\n\n        <Column\n          title=\"Delete\"\n          key=\"delete\"\n          render={(record) => (\n            <Popconfirm\n              title={`Are you sure you want to delete '${record.tag}'`}\n              okText={`delete`}\n              cancelText={`cancel`}\n              onConfirm={() => setTagDelete(record)}\n            >\n              <CloseCircleOutlined />\n            </Popconfirm>\n          )}\n        />\n      </Table>\n      {inputDisabled ? (\n        <p style={{ color: \"green\" }}>Viewing Mode</p>\n      ) : (\n        <p style={{ color: \"red\" }}>Editing Mode</p>\n      )}\n      <Space>\n        <Button onClick={() => setInputDisabled(!inputDisabled)}>\n          Edit <EditOutlined />\n        </Button>\n        <Button\n          onClick={() => {\n            setTagUpdate(tagInput);\n            setTagInput(null);\n          }}\n          disabled={(inputDisabled && !tagInput) || !tagInput ? true : false}\n        >\n          Save <SaveOutlined />\n        </Button>\n      </Space>\n    </Modal>\n  );\n};\n\nexport default CmsTagEditor;\n","/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSTimestampSelector/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSVideoSelector/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/FilterBox/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/tags.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/data/weeks.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSMenu/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/CoachCMSDescription/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/TagDropdown/index.js",[],"/Users/aftabhussain/school_of_code/final_project/front-end-final-project-code-goblins/src/components/TagFilter/index.js",[],["135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"145","line":64,"column":10,"nodeType":"143","messageId":"144","endLine":64,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":93,"column":6,"nodeType":"148","endLine":93,"endColumn":21,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"147","line":103,"column":6,"nodeType":"148","endLine":103,"endColumn":21,"suggestions":"150"},{"ruleId":"146","severity":1,"message":"151","line":54,"column":6,"nodeType":"148","endLine":54,"endColumn":17,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":73,"column":6,"nodeType":"148","endLine":73,"endColumn":14,"suggestions":"154"},{"ruleId":"137","replacedBy":"155"},{"ruleId":"139","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'lastTagId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.","ArrayExpression",["159"],["160"],"React Hook useEffect has a missing dependency: 'tagData'. Either include it or remove the dependency array. You can also do a functional update 'setTagData(t => ...)' if you only need 'tagData' in the 'setTagData' call.",["161"],"React Hook useEffect has missing dependencies: 'lastTagId' and 'tagData'. Either include them or remove the dependency array. You can also do a functional update 'setTagData(t => ...)' if you only need 'tagData' in the 'setTagData' call.",["162"],["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [guestLecturer, tags]",{"range":"171","text":"172"},"Update the dependencies array to be: [tags, tutorialVideo]",{"range":"173","text":"174"},"Update the dependencies array to be: [tagData, tagDelete]",{"range":"175","text":"176"},"Update the dependencies array to be: [lastTagId, tagAdd, tagData]",{"range":"177","text":"178"},[2868,2883],"[guestLecturer, tags]",[3188,3203],"[tags, tutorialVideo]",[1531,1542],"[tagData, tagDelete]",[2003,2011],"[lastTagId, tagAdd, tagData]"]